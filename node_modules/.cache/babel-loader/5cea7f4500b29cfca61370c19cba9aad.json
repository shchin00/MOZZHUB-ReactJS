{"ast":null,"code":"var _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\Heatmap.js\";\nimport React from 'react';\nimport { Map, TileLayer, Tooltip, Popup, Circle } from 'react-leaflet';\n\nvar Heatmap = function Heatmap(_ref, height) {\n  var lat = _ref.lat,\n      lng = _ref.lng,\n      _ref$ranking = _ref.ranking,\n      ranking = _ref$ranking === void 0 ? [] : _ref$ranking;\n  return React.createElement(Map, {\n    center: [lat, lng],\n    zoom: 13,\n    style: {\n      width: '100%',\n      height: height,\n      margin: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    maxZoom: 16,\n    minZoom: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }), ranking.map(function (elem, i) {\n    var l = (0.9 - ranking[i].ranking * 0.9) * 255; //var l = (ranking[i].ranking)*50\n\n    var h = (0.9 - ranking[i].ranking * 0.9) * 240;\n    var a = ranking[i].ranking * 0.9;\n    var hsl = \"hsl(\" + h + \", 100%, 50%)\";\n    /*  0    : blue   (hsl(240, 100%, 50%))\r\n    0.25 : cyan   (hsl(180, 100%, 50%))\r\n    0.5  : green  (hsl(120, 100%, 50%))\r\n    0.75 : yellow (hsl(60, 100%, 50%))\r\n    1    : red    (hsl(0, 100%, 50%)) */\n\n    var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\n    return React.createElement(Circle, {\n      center: {\n        lat: ranking[i].lat,\n        lng: ranking[i].lng\n      },\n      color: \"red\",\n      fillColor: rgb,\n      fillOpacity: a //fillOpacity={parseFloat(ranking[i][2])*0.7}  \n      ,\n      radius: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Ranking:#\", i + 1)));\n  }));\n};\n\nexport default Heatmap; // import { data } from 'browserslist';\n// import React, {useState} from 'react';\n// import { Map, TileLayer, Tooltip, Circle, Polyline, Popup } from 'react-leaflet';\n// const dummyRanking = [\n//     { lat: 1.462251, lng:  110.413307, ranking: 0.8 }, // London\n//     { lat: 1.468643, lng: 110.428541, ranking: 0.6 }, // New York\n//     { lat: 1.467907, lng: 110.413067, ranking: 0.4 }, // Los Angeles\n//     // { lat: 41.8781, lng: -87.6298, ranking: 0.5 }, // Chicago\n//     // { lat: 37.7749, lng: -122.4194, ranking: 0.7 } // San Francisco\n// ];\n// const Heatmap = () => {\n//     const lat = 1.462251; // Initial map center latitude\n//     const lng = 110.413307; // Initial map center longitude\n//     const[hideLine, setHideLine] = useState(false)\n//     const [popupData, setPopupData] = useState(null); \n//     const handleClick = ()=>{\n//         setHideLine(!hideLine);\n//         setPopupData(data)\n//     }\n//     const controlPoints = []; // Array to store control points for curves\n//     // Calculate control points\n//     for (let i = 0; i < dummyRanking.length - 1; i++) {\n//         const p1 = [dummyRanking[i].lat, dummyRanking[i].lng];\n//         const p2 = [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng];\n//         const controlPoint = [\n//             (p1[0] + p2[0]) / 2, // Midpoint of latitudes\n//             (p1[1] + p2[1]) / 2, // Midpoint of longitudes\n//         ];\n//         controlPoints.push(controlPoint);\n//     }\n//     return (\n//         <Map center={[lat, lng]} zoom={16} style={{ width: '100%', height: '820px', margin: 'auto' }}>\n//             <TileLayer\n//                 attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n//                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//                 maxZoom={16}\n//                 minZoom={2}\n//             />\n//             {dummyRanking.map((elem, i) => {\n//                 var l = (0.9 - dummyRanking[i].ranking * 0.9) * 255;\n//                 var h = (0.9 - dummyRanking[i].ranking * 0.9) * 240;\n//                 var a = dummyRanking[i].ranking * 0.9;\n//                 var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\n//                 return (\n//                     <Circle\n//                         key={i}\n//                         center={{ lat: dummyRanking[i].lat, lng: dummyRanking[i].lng }}\n//                         color='red'\n//                         fillColor={rgb}\n//                         fillOpacity={a}\n//                         radius={50}\n//                         onClick={handleClick}\n//                         >\n//                         <Tooltip><h3>Ranking:#{i + 1}</h3></Tooltip>\n//                     </Circle>\n//                 )\n//             })}\n//             {/* Render curved lines between circles */}\n//             {!hideLine && dummyRanking.length > 1 && controlPoints.map((controlPoint, i) => (\n//                 <Polyline\n//                     key={i}\n//                     positions={[\n//                         [dummyRanking[i].lat, dummyRanking[i].lng], // Start point\n//                         controlPoint, // Control point\n//                         [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng], // End point\n//                     ]}\n//                     color=\"blue\"\n//                 />\n//             ))}\n//         </Map>\n//     )\n// }\n// export default Heatmap;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\Heatmap.js"],"names":["React","Map","TileLayer","Tooltip","Popup","Circle","Heatmap","height","lat","lng","ranking","width","margin","map","elem","i","l","h","a","hsl","rgb"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,OAAzB,EAAiCC,KAAjC,EAAuCC,MAAvC,QAAoD,eAApD;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAuBC,MAAvB;AAAA,MAAEC,GAAF,QAAEA,GAAF;AAAA,MAAMC,GAAN,QAAMA,GAAN;AAAA,0BAAUC,OAAV;AAAA,MAAUA,OAAV,6BAAkB,EAAlB;AAAA,SACZ,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAACF,GAAD,EAAMC,GAAN,CAAb;AAAyB,IAAA,IAAI,EAAE,EAA/B;AAAoC,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,MAAT;AAAiBJ,MAAAA,MAAM,EAAEA,MAAzB;AAAiCK,MAAAA,MAAM,EAAC;AAAxC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,2EADhB;AAEI,IAAA,GAAG,EAAC,oDAFR;AAGI,IAAA,OAAO,EAAE,EAHb;AAII,IAAA,OAAO,EAAE,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKF,OAAO,CAACG,GAAR,CAAY,UAACC,IAAD,EAAOC,CAAP,EAAa;AACtB,QAAIC,CAAC,GAAG,CAAC,MAAON,OAAO,CAACK,CAAD,CAAP,CAAWL,OAAZ,GAAqB,GAA5B,IAAmC,GAA3C,CADsB,CAEtB;;AACA,QAAIO,CAAC,GAAG,CAAC,MAAMP,OAAO,CAACK,CAAD,CAAP,CAAWL,OAAZ,GAAqB,GAA3B,IAAkC,GAA1C;AACA,QAAIQ,CAAC,GAAIR,OAAO,CAACK,CAAD,CAAP,CAAWL,OAAZ,GAAqB,GAA7B;AACA,QAAIS,GAAG,GAAG,SAASF,CAAT,GAAa,cAAvB;AACA;;;;;;AAKA,QAAIG,GAAG,GAAG,aAAWJ,CAAX,GAAa,GAAb,GAAiBA,CAAjB,GAAmB,GAA7B;AACA,WAEI,oBAAC,MAAD;AACI,MAAA,MAAM,EAAE;AAACR,QAAAA,GAAG,EAACE,OAAO,CAACK,CAAD,CAAP,CAAWP,GAAhB;AAAqBC,QAAAA,GAAG,EAACC,OAAO,CAACK,CAAD,CAAP,CAAWN;AAApC,OADZ;AAEI,MAAA,KAAK,EAAC,KAFV;AAGI,MAAA,SAAS,EAAEW,GAHf;AAII,MAAA,WAAW,EAAEF,CAJjB,CAKI;AALJ;AAMI,MAAA,MAAM,EAAE,GANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,WAAJ,EAAcH,CAAC,GAAC,CAAhB,CAAT,CAPJ,CAFJ;AAYX,GAxBQ,CAPL,CADY;AAAA,CAAhB;;AAoCA,eAAeT,OAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React from 'react'\r\nimport { Map, TileLayer, Tooltip,Popup,Circle} from 'react-leaflet'\r\n\r\nconst Heatmap = ({lat,lng,ranking=[]}, height) => (\r\n    <Map center={[lat, lng]} zoom={13}  style={{ width: '100%', height: height, margin:'auto' }}>\r\n        <TileLayer\r\n            attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            maxZoom={16}\r\n            minZoom={6}\r\n        />\r\n        {ranking.map((elem, i) => {\r\n            var l = (0.9 - (ranking[i].ranking)*0.9) * 255\r\n            //var l = (ranking[i].ranking)*50\r\n            var h = (0.9- (ranking[i].ranking)*0.9) * 240\r\n            var a = (ranking[i].ranking)*0.9\r\n            var hsl = \"hsl(\" + h + \", 100%, 50%)\"\r\n            /*  0    : blue   (hsl(240, 100%, 50%))\r\n            0.25 : cyan   (hsl(180, 100%, 50%))\r\n            0.5  : green  (hsl(120, 100%, 50%))\r\n            0.75 : yellow (hsl(60, 100%, 50%))\r\n            1    : red    (hsl(0, 100%, 50%)) */\r\n            var rgb = \"rgb(255,\"+l+\",\"+l+\")\"\r\n            return (\r\n                \r\n                <Circle \r\n                    center={{lat:ranking[i].lat, lng:ranking[i].lng}}\r\n                    color='red'\r\n                    fillColor={rgb}\r\n                    fillOpacity={a}\r\n                    //fillOpacity={parseFloat(ranking[i][2])*0.7}  \r\n                    radius={400}>\r\n                    <Tooltip><h3>Ranking:#{i+1}</h3></Tooltip>\r\n                </Circle>\r\n            )\r\n})}\r\n    </Map>\r\n)\r\n\r\nexport default Heatmap\r\n\r\n// import { data } from 'browserslist';\r\n// import React, {useState} from 'react';\r\n// import { Map, TileLayer, Tooltip, Circle, Polyline, Popup } from 'react-leaflet';\r\n\r\n// const dummyRanking = [\r\n//     { lat: 1.462251, lng:  110.413307, ranking: 0.8 }, // London\r\n//     { lat: 1.468643, lng: 110.428541, ranking: 0.6 }, // New York\r\n//     { lat: 1.467907, lng: 110.413067, ranking: 0.4 }, // Los Angeles\r\n//     // { lat: 41.8781, lng: -87.6298, ranking: 0.5 }, // Chicago\r\n//     // { lat: 37.7749, lng: -122.4194, ranking: 0.7 } // San Francisco\r\n// ];\r\n\r\n// const Heatmap = () => {\r\n//     const lat = 1.462251; // Initial map center latitude\r\n//     const lng = 110.413307; // Initial map center longitude\r\n\r\n//     const[hideLine, setHideLine] = useState(false)\r\n//     const [popupData, setPopupData] = useState(null); \r\n\r\n//     const handleClick = ()=>{\r\n//         setHideLine(!hideLine);\r\n//         setPopupData(data)\r\n\r\n//     }\r\n\r\n//     const controlPoints = []; // Array to store control points for curves\r\n\r\n//     // Calculate control points\r\n//     for (let i = 0; i < dummyRanking.length - 1; i++) {\r\n//         const p1 = [dummyRanking[i].lat, dummyRanking[i].lng];\r\n//         const p2 = [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng];\r\n\r\n//         const controlPoint = [\r\n//             (p1[0] + p2[0]) / 2, // Midpoint of latitudes\r\n//             (p1[1] + p2[1]) / 2, // Midpoint of longitudes\r\n//         ];\r\n\r\n//         controlPoints.push(controlPoint);\r\n//     }\r\n\r\n//     return (\r\n//         <Map center={[lat, lng]} zoom={16} style={{ width: '100%', height: '820px', margin: 'auto' }}>\r\n//             <TileLayer\r\n//                 attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n//                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//                 maxZoom={16}\r\n//                 minZoom={2}\r\n//             />\r\n//             {dummyRanking.map((elem, i) => {\r\n//                 var l = (0.9 - dummyRanking[i].ranking * 0.9) * 255;\r\n//                 var h = (0.9 - dummyRanking[i].ranking * 0.9) * 240;\r\n//                 var a = dummyRanking[i].ranking * 0.9;\r\n//                 var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\r\n//                 return (\r\n//                     <Circle\r\n//                         key={i}\r\n//                         center={{ lat: dummyRanking[i].lat, lng: dummyRanking[i].lng }}\r\n//                         color='red'\r\n//                         fillColor={rgb}\r\n//                         fillOpacity={a}\r\n//                         radius={50}\r\n//                         onClick={handleClick}\r\n//                         >\r\n//                         <Tooltip><h3>Ranking:#{i + 1}</h3></Tooltip>\r\n//                     </Circle>\r\n//                 )\r\n//             })}\r\n//             {/* Render curved lines between circles */}\r\n//             {!hideLine && dummyRanking.length > 1 && controlPoints.map((controlPoint, i) => (\r\n//                 <Polyline\r\n//                     key={i}\r\n//                     positions={[\r\n//                         [dummyRanking[i].lat, dummyRanking[i].lng], // Start point\r\n//                         controlPoint, // Control point\r\n//                         [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng], // End point\r\n//                     ]}\r\n//                     color=\"blue\"\r\n//                 />\r\n//             ))}\r\n    \r\n//         </Map>\r\n//     )\r\n// }\r\n\r\n// export default Heatmap;\r\n"]},"metadata":{},"sourceType":"module"}