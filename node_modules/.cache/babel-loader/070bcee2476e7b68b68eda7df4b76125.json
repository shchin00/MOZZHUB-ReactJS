{"ast":null,"code":"'use client';\n\nimport _classCallCheck from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport useLazyRef from '../useLazyRef/useLazyRef';\nimport useOnMount from '../useOnMount/useOnMount';\nexport var Timeout =\n/*#__PURE__*/\nfunction () {\n  function Timeout() {\n    var _this = this;\n\n    _classCallCheck(this, Timeout);\n\n    this.currentId = null;\n\n    this.clear = function () {\n      if (_this.currentId !== null) {\n        clearTimeout(_this.currentId);\n        _this.currentId = null;\n      }\n    };\n\n    this.disposeEffect = function () {\n      return _this.clear;\n    };\n  }\n\n  _createClass(Timeout, [{\n    key: \"start\",\n\n    /**\n     * Executes `fn` after `delay`, clearing any previously scheduled call.\n     */\n    value: function start(delay, fn) {\n      var _this2 = this;\n\n      this.clear();\n      this.currentId = setTimeout(function () {\n        _this2.currentId = null;\n        fn();\n      }, delay);\n    }\n  }], [{\n    key: \"create\",\n    value: function create() {\n      return new Timeout();\n    }\n  }]);\n\n  return Timeout;\n}();\nexport default function useTimeout() {\n  var timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","map":null,"metadata":{},"sourceType":"module"}