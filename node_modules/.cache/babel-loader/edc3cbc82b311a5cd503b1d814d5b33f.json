{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { moveHighlight, listReducer, ListActionTypes, handleItemSelection } from '../useList';\nimport { SelectActionTypes } from './useSelect.types';\nexport function selectReducer(state, action) {\n  var open = state.open;\n  var selectionMode = action.context.selectionMode;\n\n  if (action.type === SelectActionTypes.buttonClick) {\n    var _state$selectedValues;\n\n    var itemToHighlight = (_state$selectedValues = state.selectedValues[0]) != null ? _state$selectedValues : moveHighlight(null, 'start', action.context);\n    return _extends({}, state, {\n      open: !open,\n      highlightedValue: !open ? itemToHighlight : null\n    });\n  }\n\n  if (action.type === SelectActionTypes.browserAutoFill) {\n    return handleItemSelection(action.item, state, action.context);\n  }\n\n  var newState = listReducer(state, action);\n\n  switch (action.type) {\n    case ListActionTypes.keyDown:\n      if (state.open) {\n        if (action.event.key === 'Escape') {\n          return _extends({}, newState, {\n            open: false\n          });\n        }\n      } else {\n        if (action.event.key === 'ArrowDown') {\n          var _state$selectedValues2;\n\n          return _extends({}, state, {\n            open: true,\n            highlightedValue: (_state$selectedValues2 = state.selectedValues[0]) != null ? _state$selectedValues2 : moveHighlight(null, 'start', action.context)\n          });\n        }\n\n        if (action.event.key === 'ArrowUp') {\n          var _state$selectedValues3;\n\n          return _extends({}, state, {\n            open: true,\n            highlightedValue: (_state$selectedValues3 = state.selectedValues[0]) != null ? _state$selectedValues3 : moveHighlight(null, 'end', action.context)\n          });\n        }\n      }\n\n      break;\n\n    case ListActionTypes.itemClick:\n      if (selectionMode === 'single') {\n        return _extends({}, newState, {\n          open: false\n        });\n      }\n\n      break;\n\n    case ListActionTypes.blur:\n      return _extends({}, newState, {\n        open: false\n      });\n\n    default:\n      return newState;\n  }\n\n  return newState;\n}","map":null,"metadata":{},"sourceType":"module"}