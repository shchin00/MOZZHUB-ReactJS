{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { CompoundComponentContext } from './useCompoundParent';\n/**\n * Registers a child component with the parent component.\n *\n * @param id A unique key for the child component. If the `id` is `undefined`, the registration logic will not run (this can sometimes be the case during SSR).\n *   This can be either a value, or a function that generates a value based on already registered siblings' ids.\n *   If a function, it's called with the set of the ids of all the items that have already been registered.\n *   Return `existingKeys.size` if you want to use the index of the new item as the id.\n * @param itemMetadata Arbitrary metadata to pass to the parent component. This should be a stable reference (for example a memoized object), to avoid unnecessary re-registrations.\n *\n * @ignore - internal hook.\n */\n\nexport function useCompoundItem(id, itemMetadata) {\n  var context = React.useContext(CompoundComponentContext);\n\n  if (context === null) {\n    throw new Error('useCompoundItem must be used within a useCompoundParent');\n  }\n\n  var registerItem = context.registerItem;\n\n  var _React$useState = React.useState(typeof id === 'function' ? undefined : id),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      registeredId = _React$useState2[0],\n      setRegisteredId = _React$useState2[1];\n\n  useEnhancedEffect(function () {\n    var _registerItem = registerItem(id, itemMetadata),\n        returnedId = _registerItem.id,\n        deregister = _registerItem.deregister;\n\n    setRegisteredId(returnedId);\n    return deregister;\n  }, [registerItem, itemMetadata, id]);\n  return {\n    id: registeredId,\n    index: registeredId !== undefined ? context.getItemIndex(registeredId) : -1,\n    totalItemCount: context.totalSubitemCount\n  };\n}","map":null,"metadata":{},"sourceType":"module"}