{"ast":null,"code":"var _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\reviewCom.js\";\nimport React from 'react';\nimport { Button, Grid, Form, Divider, Segment, Input, Progress, Header } from 'semantic-ui-react';\n\nvar CaseFormReview = function CaseFormReview(_ref) {\n  var _ref$dataC = _ref.dataC,\n      dataC = _ref$dataC === void 0 ? {} : _ref$dataC,\n      _ref$dataP = _ref.dataP,\n      dataP = _ref$dataP === void 0 ? {} : _ref$dataP,\n      _ref$dataN = _ref.dataN,\n      dataN = _ref$dataN === void 0 ? {} : _ref$dataN,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? {} : _ref$data;\n  return React.createElement(Grid, {\n    stackable: true,\n    columns: 'equal',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"CASE\"), React.createElement(Segment, {\n    color: \"green\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    label: 'eDengue Case No',\n    name: 'case_no',\n    value: dataC.case_no,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Case Notification Note',\n    name: 'case_note',\n    value: dataC.case_note,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Epid Week Number',\n    value: dataC.eWeek,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Area',\n    value: dataC.case_area,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Case Type',\n    value: dataC.case_type,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Outbreak Location',\n    value: dataC.outbreaks_loc,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Outbreaks First Case',\n    value: dataC.outbreaks_first,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"PATIENT\"), React.createElement(Segment, {\n    color: \"teal\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    label: 'Patient Name',\n    name: 'pat_name',\n    value: dataP.pat_name,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Race',\n    name: 'race',\n    value: dataP.race,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Nationality',\n    value: dataP.nationality,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Age',\n    value: dataP.age,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Gender',\n    value: dataP.gender,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Occupation',\n    value: dataP.occp,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'IC Number',\n    value: dataP.ic_num,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(Segment, {\n    color: \"teal\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    label: 'IC Type',\n    name: 'case_no',\n    value: dataP.ic_type,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Escort Name',\n    name: 'case_note',\n    value: dataP.esc_name,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Current Address',\n    value: dataP.curr_add,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Current Addressge Type',\n    value: dataP.curr_add_type,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Current Telephone Number',\n    value: dataP.curr_add_tel,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Current HP Number',\n    value: dataP.curr_add_hp,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Other Address',\n    value: dataP.oth_add,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))))));\n};\n\nexport default CaseFormReview;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\reviewCom.js"],"names":["React","Button","Grid","Form","Divider","Segment","Input","Progress","Header","CaseFormReview","dataC","dataP","dataN","data","case_no","case_note","eWeek","case_area","case_type","outbreaks_loc","outbreaks_first","pat_name","race","nationality","age","gender","occp","ic_num","ic_type","esc_name","curr_add","curr_add_type","curr_add_tel","curr_add_hp","oth_add"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Button,Grid,Form,Divider,Segment, Input, Progress,Header} from 'semantic-ui-react'\r\n\r\nconst CaseFormReview = ({dataC={},dataP={},dataN={},data={}}) =>(\r\n    <Grid stackable columns={'equal'}>\r\n        <Grid.Row> \r\n            <Grid.Column>\r\n                <Form >\r\n                    <Form.Field inline>\r\n                        <Header as ='h3'>CASE</Header>\r\n                        <Segment color='green' basic>\r\n                            <Form.Input label={'eDengue Case No'} name={'case_no'} value={dataC.case_no} readOnly/>\r\n                            <Form.Input label={'Case Notification Note'} name={'case_note'} value={dataC.case_note} readOnly />\r\n                            <Form.Input label={'Epid Week Number'} value={dataC.eWeek} readOnly/>\r\n                            <Form.Input label={'Area'} value={dataC.case_area} readOnly/>\r\n                            <Form.Input label={'Case Type'} value={dataC.case_type} readOnly/>\r\n                            <Form.Input label={'Outbreak Location'} value={dataC.outbreaks_loc} readOnly/>\r\n                            <Form.Input label={'Outbreaks First Case'} value={dataC.outbreaks_first} readOnly/>\r\n                        </Segment>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Form>\r\n                    <Form.Field inline >\r\n                        <Header as ='h3'>PATIENT</Header>\r\n                        <Segment color='teal' basic>\r\n                            <Form.Input label={'Patient Name'} name={'pat_name'} value={dataP.pat_name} readOnly/>\r\n                            <Form.Input label={'Race'} name={'race'} value={dataP.race} readOnly />\r\n                            <Form.Input label={'Nationality'} value={dataP.nationality} readOnly/>\r\n                            <Form.Input label={'Age'} value={dataP.age} readOnly/>\r\n                            <Form.Input label={'Gender'} value={dataP.gender} readOnly/>\r\n                            <Form.Input label={'Occupation'} value={dataP.occp} readOnly/>\r\n                            <Form.Input label={'IC Number'} value={dataP.ic_num} readOnly/>\r\n                        </Segment>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Form>\r\n                    <Form.Field inline>\r\n                        <Header as ='h3'>&nbsp;</Header>\r\n                        <Segment color='teal' basic>\r\n                        <Form.Input label={'IC Type'} name={'case_no'} value={dataP.ic_type} readOnly/>\r\n                        <Form.Input label={'Escort Name'} name={'case_note'} value={dataP.esc_name} readOnly />\r\n                        <Form.Input label={'Current Address'} value={dataP.curr_add} readOnly/>\r\n                        <Form.Input label={'Current Addressge Type'} value={dataP.curr_add_type} readOnly/>\r\n                        <Form.Input label={'Current Telephone Number'} value={dataP.curr_add_tel} readOnly/>\r\n                        <Form.Input label={'Current HP Number'} value={dataP.curr_add_hp} readOnly/>\r\n                        <Form.Input label={'Other Address'} value={dataP.oth_add} readOnly/>\r\n                        </Segment>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Grid.Column>\r\n           \r\n        </Grid.Row>\r\n    </Grid>               \r\n)\r\n\r\nexport default CaseFormReview"]},"metadata":{},"sourceType":"module"}