{"ast":null,"code":"import { clamp } from '@mui/utils';\nexport function clampStepwise(val) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MIN_SAFE_INTEGER;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.MAX_SAFE_INTEGER;\n  var stepProp = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : NaN;\n\n  if (Number.isNaN(stepProp)) {\n    return clamp(val, min, max);\n  }\n\n  var step = stepProp || 1;\n  var remainder = val % step;\n  var positivity = Math.sign(remainder);\n\n  if (Math.abs(remainder) > step / 2) {\n    return clamp(val + positivity * (step - Math.abs(remainder)), min, max);\n  }\n\n  return clamp(val - positivity * Math.abs(remainder), min, max);\n}\nexport function isNumber(val) {\n  return typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val);\n}","map":null,"metadata":{},"sourceType":"module"}