{"ast":null,"code":"var _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\Heatmap.js\";\n// import React from 'react'\n// import { Map, TileLayer, Tooltip,Popup,Circle} from 'react-leaflet'\n// const Heatmap = ({lat,lng,ranking=[]}) => (\n//     <Map center={[lat, lng]} zoom={13}  style={{ width: '100%', height: '820px', margin:'auto' }}>\n//         <TileLayer\n//             attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             maxZoom={16}\n//             minZoom={6}\n//         />\n//         {ranking.map((elem, i) => {\n//             var l = (0.9 - (ranking[i].ranking)*0.9) * 255\n//             //var l = (ranking[i].ranking)*50\n//             var h = (0.9- (ranking[i].ranking)*0.9) * 240\n//             var a = (ranking[i].ranking)*0.9\n//             var hsl = \"hsl(\" + h + \", 100%, 50%)\"\n//            /*  0    : blue   (hsl(240, 100%, 50%))\n//             0.25 : cyan   (hsl(180, 100%, 50%))\n//             0.5  : green  (hsl(120, 100%, 50%))\n//             0.75 : yellow (hsl(60, 100%, 50%))\n//             1    : red    (hsl(0, 100%, 50%)) */\n//             var rgb = \"rgb(255,\"+l+\",\"+l+\")\"\n//             return (\n//                 <Circle \n//                     center={{lat:ranking[i].lat, lng:ranking[i].lng}}\n//                     color='red'\n//                     fillColor={rgb}\n//                     fillOpacity={a}\n//                     //fillOpacity={parseFloat(ranking[i][2])*0.7}  \n//                     radius={400}>\n//                     <Tooltip><h3>Ranking:#{i+1}</h3></Tooltip>\n//                 </Circle>\n//             )\n//           })}\n//     </Map>\n// )\n// export default Heatmap\n// import React from 'react';\n// import { Map, TileLayer, Tooltip, Circle, Polyline } from 'react-leaflet';\n// const Heatmap = ({ lat, lng, ranking = [] }) => {\n//     return (\n//         <Map center={[lat, lng]} zoom={13} style={{ width: '100%', height: '820px', margin: 'auto' }}>\n//             <TileLayer\n//                 attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n//                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//                 maxZoom={16}\n//                 minZoom={6}\n//             />\n//             {ranking.map((elem, i) => {\n//                 var l = (0.9 - ranking[i].ranking * 0.9) * 255;\n//                 var h = (0.9 - ranking[i].ranking * 0.9) * 240;\n//                 var a = ranking[i].ranking * 0.9;\n//                 var hsl = \"hsl(\" + h + \", 100%, 50%)\";\n//                 var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\n//                 return (\n//                     <Circle\n//                         // key={i}\n//                         // center={{ lat: ranking[i].lat, lng: ranking[i].lng }}\n//                         // color='red'\n//                         // fillColor={rgb}\n//                         // fillOpacity={a}\n//                         // radius={400}>\n//                         // <Tooltip><h3>Ranking:#{i + 1}</h3></Tooltip>\n//                         // key={i}\n//                         center={{ lat: ranking[1].lat, lng: ranking[1].lng }}\n//                         color='red'\n//                         fillColor={rgb}\n//                         fillOpacity={a}\n//                         radius={400}>\n//                         <Tooltip><h3>Ranking:#{i + 1}</h3></Tooltip>\n//                     </Circle>\n//                 )\n//             })}\n//             {/* Render paths between circles */}\n//             {/* <Polyline positions={ranking.map(elem => [elem.lat, elem.lng])} color=\"blue\" /> */}\n//         </Map>\n//     )\n// }\n// export default Heatmap;\nimport React from 'react';\nimport { Map, TileLayer, Tooltip, Circle } from 'react-leaflet';\n\nvar Heatmap = function Heatmap(_ref) {\n  var lat = _ref.lat,\n      lng = _ref.lng,\n      _ref$ranking = _ref.ranking,\n      ranking = _ref$ranking === void 0 ? [] : _ref$ranking;\n  var controlPoints = []; // Array to store control points for curves\n  // Calculate control points\n\n  for (var i = 0; i < ranking.length - 1; i++) {\n    var p1 = [ranking[i].lat, ranking[i].lng];\n    var p2 = [ranking[i + 1].lat, ranking[i + 1].lng];\n    var controlPoint = [(p1[0] + p2[0]) / 2, // Midpoint of latitudes\n    (p1[1] + p2[1]) / 2];\n    controlPoints.push(controlPoint);\n  }\n\n  return React.createElement(Map, {\n    center: [lat, lng],\n    zoom: 13,\n    style: {\n      width: '100%',\n      height: '820px',\n      margin: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    maxZoom: 16,\n    minZoom: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), ranking.map(function (elem, i) {\n    var l = (0.9 - ranking[i].ranking * 0.9) * 255;\n    var h = (0.9 - ranking[i].ranking * 0.9) * 240;\n    var a = ranking[i].ranking * 0.9;\n    var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\n    return React.createElement(Circle, {\n      key: i,\n      center: {\n        lat: ranking[i].lat,\n        lng: ranking[i].lng\n      },\n      color: \"red\",\n      fillColor: rgb,\n      fillOpacity: a,\n      radius: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Ranking:#\", i + 1)));\n  }), ranking.length > 1 && controlPoints.map(function (controlPoint, i) {\n    return React.createElement(BezierCurve, {\n      key: i,\n      positions: [[ranking[i].lat, ranking[i].lng], // Start point\n      controlPoint, // Control point\n      [ranking[i + 1].lat, ranking[i + 1].lng]],\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Heatmap;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\Heatmap.js"],"names":["React","Map","TileLayer","Tooltip","Circle","Heatmap","lat","lng","ranking","controlPoints","i","length","p1","p2","controlPoint","push","width","height","margin","map","elem","l","h","a","rgb"],"mappings":"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","sourcesContent":["// import React from 'react'\r\n// import { Map, TileLayer, Tooltip,Popup,Circle} from 'react-leaflet'\r\n\r\n// const Heatmap = ({lat,lng,ranking=[]}) => (\r\n//     <Map center={[lat, lng]} zoom={13}  style={{ width: '100%', height: '820px', margin:'auto' }}>\r\n//         <TileLayer\r\n//             attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//             maxZoom={16}\r\n//             minZoom={6}\r\n//         />\r\n//         {ranking.map((elem, i) => {\r\n//             var l = (0.9 - (ranking[i].ranking)*0.9) * 255\r\n//             //var l = (ranking[i].ranking)*50\r\n//             var h = (0.9- (ranking[i].ranking)*0.9) * 240\r\n//             var a = (ranking[i].ranking)*0.9\r\n//             var hsl = \"hsl(\" + h + \", 100%, 50%)\"\r\n//            /*  0    : blue   (hsl(240, 100%, 50%))\r\n//             0.25 : cyan   (hsl(180, 100%, 50%))\r\n//             0.5  : green  (hsl(120, 100%, 50%))\r\n//             0.75 : yellow (hsl(60, 100%, 50%))\r\n//             1    : red    (hsl(0, 100%, 50%)) */\r\n//             var rgb = \"rgb(255,\"+l+\",\"+l+\")\"\r\n//             return (\r\n                \r\n//                 <Circle \r\n//                     center={{lat:ranking[i].lat, lng:ranking[i].lng}}\r\n//                     color='red'\r\n//                     fillColor={rgb}\r\n//                     fillOpacity={a}\r\n//                     //fillOpacity={parseFloat(ranking[i][2])*0.7}  \r\n//                     radius={400}>\r\n//                     <Tooltip><h3>Ranking:#{i+1}</h3></Tooltip>\r\n//                 </Circle>\r\n//             )\r\n//           })}\r\n    \r\n\r\n       \r\n//     </Map>\r\n// )\r\n\r\n// export default Heatmap\r\n\r\n// import React from 'react';\r\n// import { Map, TileLayer, Tooltip, Circle, Polyline } from 'react-leaflet';\r\n\r\n// const Heatmap = ({ lat, lng, ranking = [] }) => {\r\n//     return (\r\n//         <Map center={[lat, lng]} zoom={13} style={{ width: '100%', height: '820px', margin: 'auto' }}>\r\n//             <TileLayer\r\n//                 attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n//                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//                 maxZoom={16}\r\n//                 minZoom={6}\r\n//             />\r\n//             {ranking.map((elem, i) => {\r\n//                 var l = (0.9 - ranking[i].ranking * 0.9) * 255;\r\n//                 var h = (0.9 - ranking[i].ranking * 0.9) * 240;\r\n//                 var a = ranking[i].ranking * 0.9;\r\n//                 var hsl = \"hsl(\" + h + \", 100%, 50%)\";\r\n//                 var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\r\n//                 return (\r\n//                     <Circle\r\n//                         // key={i}\r\n//                         // center={{ lat: ranking[i].lat, lng: ranking[i].lng }}\r\n//                         // color='red'\r\n//                         // fillColor={rgb}\r\n//                         // fillOpacity={a}\r\n//                         // radius={400}>\r\n//                         // <Tooltip><h3>Ranking:#{i + 1}</h3></Tooltip>\r\n//                         // key={i}\r\n//                         center={{ lat: ranking[1].lat, lng: ranking[1].lng }}\r\n//                         color='red'\r\n//                         fillColor={rgb}\r\n//                         fillOpacity={a}\r\n//                         radius={400}>\r\n//                         <Tooltip><h3>Ranking:#{i + 1}</h3></Tooltip>\r\n//                     </Circle>\r\n//                 )\r\n//             })}\r\n//             {/* Render paths between circles */}\r\n//             {/* <Polyline positions={ranking.map(elem => [elem.lat, elem.lng])} color=\"blue\" /> */}\r\n//         </Map>\r\n//     )\r\n// }\r\n\r\n// export default Heatmap;\r\n\r\nimport React from 'react';\r\nimport { Map, TileLayer, Tooltip, Circle} from 'react-leaflet';\r\n\r\nconst Heatmap = ({ lat, lng, ranking = [] }) => {\r\n    const controlPoints = []; // Array to store control points for curves\r\n\r\n    // Calculate control points\r\n    for (let i = 0; i < ranking.length - 1; i++) {\r\n        const p1 = [ranking[i].lat, ranking[i].lng];\r\n        const p2 = [ranking[i + 1].lat, ranking[i + 1].lng];\r\n\r\n        const controlPoint = [\r\n            (p1[0] + p2[0]) / 2, // Midpoint of latitudes\r\n            (p1[1] + p2[1]) / 2, // Midpoint of longitudes\r\n        ];\r\n\r\n        controlPoints.push(controlPoint);\r\n    }\r\n\r\n    return (\r\n        <Map center={[lat, lng]} zoom={13} style={{ width: '100%', height: '820px', margin: 'auto' }}>\r\n            <TileLayer\r\n                attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                maxZoom={16}\r\n                minZoom={6}\r\n            />\r\n            {ranking.map((elem, i) => {\r\n                var l = (0.9 - ranking[i].ranking * 0.9) * 255;\r\n                var h = (0.9 - ranking[i].ranking * 0.9) * 240;\r\n                var a = ranking[i].ranking * 0.9;\r\n                var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\r\n                return (\r\n                    <Circle\r\n                        key={i}\r\n                        center={{ lat: ranking[i].lat, lng: ranking[i].lng }}\r\n                        color='red'\r\n                        fillColor={rgb}\r\n                        fillOpacity={a}\r\n                        radius={400}>\r\n                        <Tooltip><h3>Ranking:#{i + 1}</h3></Tooltip>\r\n                    </Circle>\r\n                )\r\n            })}\r\n            {/* Render curved lines between circles */}\r\n            {ranking.length > 1 && controlPoints.map((controlPoint, i) => (\r\n                <BezierCurve\r\n                    key={i}\r\n                    positions={[\r\n                        [ranking[i].lat, ranking[i].lng], // Start point\r\n                        controlPoint, // Control point\r\n                        [ranking[i + 1].lat, ranking[i + 1].lng], // End point\r\n                    ]}\r\n                    color=\"blue\"\r\n                />\r\n            ))}\r\n        </Map>\r\n    )\r\n}\r\n\r\nexport default Heatmap;\r\n"]},"metadata":{},"sourceType":"module"}