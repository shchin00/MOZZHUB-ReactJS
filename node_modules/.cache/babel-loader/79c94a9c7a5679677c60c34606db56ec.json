{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"className\", \"enterAnimationName\", \"enterClassName\", \"exitAnimationName\", \"exitClassName\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssAnimation API](https://mui.com/base-ui/react-transitions/components-api/#css-animation)\n */\n\nfunction CssAnimation(props) {\n  var children = props.children,\n      className = props.className,\n      enterAnimationName = props.enterAnimationName,\n      enterClassName = props.enterClassName,\n      exitAnimationName = props.exitAnimationName,\n      exitClassName = props.exitClassName,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useTransitionStateMa = useTransitionStateManager(),\n      requestedEnter = _useTransitionStateMa.requestedEnter,\n      onExited = _useTransitionStateMa.onExited;\n\n  var hasExited = React.useRef(true);\n  React.useEffect(function () {\n    if (requestedEnter && hasExited.current) {\n      hasExited.current = false;\n    }\n  }, [requestedEnter]);\n  var handleAnimationEnd = React.useCallback(function (event) {\n    if (event.animationName === exitAnimationName) {\n      onExited();\n      hasExited.current = true;\n    } else if (event.animationName === enterAnimationName) {\n      hasExited.current = false;\n    }\n  }, [onExited, exitAnimationName, enterAnimationName]);\n  return (\n    /*#__PURE__*/\n    _jsx(\"div\", _extends({\n      onAnimationEnd: handleAnimationEnd,\n      className: clsx(className, requestedEnter ? enterClassName : exitClassName)\n    }, other, {\n      children: children\n    }))\n  );\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssAnimation.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterAnimationName: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitAnimationName: PropTypes.string,\n  exitClassName: PropTypes.string\n} : void 0;\nexport { CssAnimation };","map":null,"metadata":{},"sourceType":"module"}