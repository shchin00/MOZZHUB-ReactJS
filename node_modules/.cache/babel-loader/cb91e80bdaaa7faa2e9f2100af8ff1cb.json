{"ast":null,"code":"import config from './config';\nimport { dispatch } from './store.js';\nimport { push } from 'react-router-redux';\nvar headers = {\n  'Accept': '*/*',\n  'Content-Type': 'application/json; charset=utf-8'\n};\nexport var user = {\n  login: function login(body, state) {\n    var _this = this;\n\n    fetch(\"\".concat(config.url, \"/login\"), {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(body)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.data === 401) {\n        var nextState = {\n          status: false\n        };\n        dispatch(push('/login', {\n          status: false\n        }));\n        return nextState;\n      } else {\n        if (data.level == 1) {\n          var _nextState = _this.loginDone(data);\n\n          dispatch(push('/'));\n          return _nextState;\n        } else if (data.level == 2) {\n          console.log(data.level);\n          var _nextState2 = {\n            status: true\n          };\n          dispatch(push('/login', {\n            status: true\n          }));\n          return _nextState2;\n        } else {}\n      }\n    });\n  }\n};\nexport var record = {\n  /* record(){\r\n      let url = `${config.url}/genList`\r\n          fetch(url)\r\n          .then (res =>res.json())\r\n          .catch((err)=>console.log(err))\r\n      let url2 = `${config.url}/record`\r\n      fetch(url2)\r\n          .then (res =>res.json())\r\n          .then (data =>  this.recordDone(data) \r\n      );\r\n  } */\n};\nexport var nodes = {\n  getNodes: function getNodes(state) {\n    /* fetch(`${config.url}/rankingData`)\r\n    .then(res => res.json())\r\n    .then(data => this.getNodesDone(data)) */\n  }\n};","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\effects.js"],"names":["config","dispatch","push","headers","user","login","body","state","fetch","url","method","JSON","stringify","then","res","json","data","nextState","status","level","loginDone","console","log","record","nodes","getNodes"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,IAAMC,OAAO,GAAG;AACZ,YAAU,KADE;AAEZ,kBAAgB;AAFJ,CAAhB;AAKA,OAAO,IAAMC,IAAI,GAAG;AAChBC,EAAAA,KADgB,iBACVC,IADU,EACJC,KADI,EACG;AAAA;;AACfC,IAAAA,KAAK,WAAIR,MAAM,CAACS,GAAX,aAAwB;AACzBC,MAAAA,MAAM,EAAE,MADiB;AAEzBP,MAAAA,OAAO,EAAPA,OAFyB;AAGzBG,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHmB,KAAxB,CAAL,CAKCO,IALD,CAKM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALT,EAMCF,IAND,CAMM,UAAAG,IAAI,EAAI;AACV,UAAGA,IAAI,CAACA,IAAL,KAAc,GAAjB,EAAqB;AACjB,YAAIC,SAAS,GAAG;AACZC,UAAAA,MAAM,EAAC;AADK,SAAhB;AAGAjB,QAAAA,QAAQ,CAACC,IAAI,CAAC,QAAD,EAAU;AAACgB,UAAAA,MAAM,EAAC;AAAR,SAAV,CAAL,CAAR;AACA,eAAOD,SAAP;AACH,OAND,MAOI;AACA,YAAGD,IAAI,CAACG,KAAL,IAAY,CAAf,EAAiB;AACb,cAAIF,UAAS,GAAG,KAAI,CAACG,SAAL,CAAeJ,IAAf,CAAhB;;AACAf,UAAAA,QAAQ,CAACC,IAAI,CAAC,GAAD,CAAL,CAAR;AACA,iBAAOe,UAAP;AACH,SAJD,MAKK,IAAID,IAAI,CAACG,KAAL,IAAY,CAAhB,EAAkB;AACnBE,UAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACG,KAAjB;AACA,cAAIF,WAAS,GAAG;AACZC,YAAAA,MAAM,EAAC;AADK,WAAhB;AAGAjB,UAAAA,QAAQ,CAACC,IAAI,CAAC,QAAD,EAAU;AAACgB,YAAAA,MAAM,EAAC;AAAR,WAAV,CAAL,CAAR;AACA,iBAAOD,WAAP;AACH,SAPI,MAQD,CAEH;AACJ;AACJ,KAhCD;AAiCH;AAnCe,CAAb;AAuCP,OAAO,IAAMM,MAAM,GAAG;AAClB;;;;;;;;;;;AADkB,CAAf;AAcP,OAAO,IAAMC,KAAK,GAAG;AACjBC,EAAAA,QADiB,oBACRlB,KADQ,EACD;AACZ;;;AAGH;AALgB,CAAd","sourcesContent":["import config from './config'\r\nimport { dispatch } from './store.js'\r\nimport { push } from 'react-router-redux'\r\n\r\nconst headers = {\r\n    'Accept': '*/*',\r\n    'Content-Type': 'application/json; charset=utf-8'\r\n}\r\n\r\nexport const user = {\r\n    login(body, state) {\r\n        fetch(`${config.url}/login`, { \r\n            method: 'POST',\r\n            headers,\r\n            body: JSON.stringify(body)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.data === 401){\r\n                let nextState = {\r\n                    status:false\r\n                }\r\n                dispatch(push('/login',{status:false}))\r\n                return nextState\r\n            }\r\n            else{\r\n                if(data.level==1){\r\n                    let nextState = this.loginDone(data)\r\n                    dispatch(push('/'))\r\n                    return nextState\r\n                }\r\n                else if (data.level==2){\r\n                    console.log(data.level)\r\n                    let nextState = {\r\n                        status:true\r\n                    }\r\n                    dispatch(push('/login',{status:true}))\r\n                    return nextState\r\n                }\r\n                else{\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const record = {\r\n    /* record(){\r\n        let url = `${config.url}/genList`\r\n            fetch(url)\r\n            .then (res =>res.json())\r\n            .catch((err)=>console.log(err))\r\n        let url2 = `${config.url}/record`\r\n        fetch(url2)\r\n            .then (res =>res.json())\r\n            .then (data =>  this.recordDone(data) \r\n        );\r\n    } */\r\n}\r\n\r\nexport const nodes = {\r\n    getNodes(state) {\r\n        /* fetch(`${config.url}/rankingData`)\r\n        .then(res => res.json())\r\n        .then(data => this.getNodesDone(data)) */\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}