{"ast":null,"code":"import _slicedToArray from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\Heatmap.js\";\n// import React from 'react'\n// import { Map, TileLayer, Tooltip,Popup,Circle} from 'react-leaflet'\n// const Heatmap = ({lat,lng,ranking=[]}) => (\n//     <Map center={[lat, lng]} zoom={13}  style={{ width: '100%', height: '820px', margin:'auto' }}>\n//         <TileLayer\n//             attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//             maxZoom={16}\n//             minZoom={6}\n//         />\n//         {ranking.map((elem, i) => {\n//             var l = (0.9 - (ranking[i].ranking)*0.9) * 255\n//             //var l = (ranking[i].ranking)*50\n//             var h = (0.9- (ranking[i].ranking)*0.9) * 240\n//             var a = (ranking[i].ranking)*0.9\n//             var hsl = \"hsl(\" + h + \", 100%, 50%)\"\n//            /*  0    : blue   (hsl(240, 100%, 50%))\n//             0.25 : cyan   (hsl(180, 100%, 50%))\n//             0.5  : green  (hsl(120, 100%, 50%))\n//             0.75 : yellow (hsl(60, 100%, 50%))\n//             1    : red    (hsl(0, 100%, 50%)) */\n//             var rgb = \"rgb(255,\"+l+\",\"+l+\")\"\n//             return (\n//                 <Circle \n//                     center={{lat:ranking[i].lat, lng:ranking[i].lng}}\n//                     color='red'\n//                     fillColor={rgb}\n//                     fillOpacity={a}\n//                     //fillOpacity={parseFloat(ranking[i][2])*0.7}  \n//                     radius={400}>\n//                     <Tooltip><h3>Ranking:#{i+1}</h3></Tooltip>\n//                 </Circle>\n//             )\n//           })}\n//     </Map>\n// )\n// export default Heatmap\nimport React from 'react';\nimport { Map, TileLayer, Tooltip, Circle, Polyline } from 'react-leaflet';\n\nvar _use = use,\n    _use2 = _slicedToArray(_use, 2),\n    hideLine = _use2[0],\n    setHideLine = _use2[1];\n\nvar dummyRanking = [{\n  lat: 1.462251,\n  lng: 110.413307,\n  ranking: 0.8\n}, // London\n{\n  lat: 1.468643,\n  lng: 110.428541,\n  ranking: 0.6\n}];\n\nvar Heatmap = function Heatmap() {\n  var lat = 1.462251; // Initial map center latitude\n\n  var lng = 110.413307; // Initial map center longitude\n\n  var handleClick = function handleClick() {};\n\n  var controlPoints = []; // Array to store control points for curves\n  // Calculate control points\n\n  for (var i = 0; i < dummyRanking.length - 1; i++) {\n    var p1 = [dummyRanking[i].lat, dummyRanking[i].lng];\n    var p2 = [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng];\n    var controlPoint = [(p1[0] + p2[0]) / 2, // Midpoint of latitudes\n    (p1[1] + p2[1]) / 2];\n    controlPoints.push(controlPoint);\n  }\n\n  return React.createElement(Map, {\n    center: [lat, lng],\n    zoom: 13,\n    style: {\n      width: '100%',\n      height: '820px',\n      margin: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    maxZoom: 16,\n    minZoom: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), dummyRanking.map(function (elem, i) {\n    var l = (0.9 - dummyRanking[i].ranking * 0.9) * 255;\n    var h = (0.9 - dummyRanking[i].ranking * 0.9) * 240;\n    var a = dummyRanking[i].ranking * 0.9;\n    var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\n    return React.createElement(Circle, {\n      key: i,\n      center: {\n        lat: dummyRanking[i].lat,\n        lng: dummyRanking[i].lng\n      },\n      color: \"red\",\n      fillColor: rgb,\n      fillOpacity: a,\n      radius: 50,\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Ranking:#\", i + 1)));\n  }), dummyRanking.length > 1 && controlPoints.map(function (controlPoint, i) {\n    return React.createElement(Polyline, {\n      key: i,\n      positions: [[dummyRanking[i].lat, dummyRanking[i].lng], // Start point\n      controlPoint, // Control point\n      [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng]],\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Heatmap;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\Heatmap.js"],"names":["React","Map","TileLayer","Tooltip","Circle","Polyline","use","hideLine","setHideLine","dummyRanking","lat","lng","ranking","Heatmap","handleClick","controlPoints","i","length","p1","p2","controlPoint","push","width","height","margin","map","elem","l","h","a","rgb"],"mappings":"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","sourcesContent":["// import React from 'react'\r\n// import { Map, TileLayer, Tooltip,Popup,Circle} from 'react-leaflet'\r\n\r\n// const Heatmap = ({lat,lng,ranking=[]}) => (\r\n//     <Map center={[lat, lng]} zoom={13}  style={{ width: '100%', height: '820px', margin:'auto' }}>\r\n//         <TileLayer\r\n//             attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//             maxZoom={16}\r\n//             minZoom={6}\r\n//         />\r\n//         {ranking.map((elem, i) => {\r\n//             var l = (0.9 - (ranking[i].ranking)*0.9) * 255\r\n//             //var l = (ranking[i].ranking)*50\r\n//             var h = (0.9- (ranking[i].ranking)*0.9) * 240\r\n//             var a = (ranking[i].ranking)*0.9\r\n//             var hsl = \"hsl(\" + h + \", 100%, 50%)\"\r\n//            /*  0    : blue   (hsl(240, 100%, 50%))\r\n//             0.25 : cyan   (hsl(180, 100%, 50%))\r\n//             0.5  : green  (hsl(120, 100%, 50%))\r\n//             0.75 : yellow (hsl(60, 100%, 50%))\r\n//             1    : red    (hsl(0, 100%, 50%)) */\r\n//             var rgb = \"rgb(255,\"+l+\",\"+l+\")\"\r\n//             return (\r\n                \r\n//                 <Circle \r\n//                     center={{lat:ranking[i].lat, lng:ranking[i].lng}}\r\n//                     color='red'\r\n//                     fillColor={rgb}\r\n//                     fillOpacity={a}\r\n//                     //fillOpacity={parseFloat(ranking[i][2])*0.7}  \r\n//                     radius={400}>\r\n//                     <Tooltip><h3>Ranking:#{i+1}</h3></Tooltip>\r\n//                 </Circle>\r\n//             )\r\n//           })}\r\n    \r\n\r\n       \r\n//     </Map>\r\n// )\r\n\r\n// export default Heatmap\r\n\r\nimport React from 'react';\r\nimport { Map, TileLayer, Tooltip, Circle, Polyline } from 'react-leaflet';\r\n\r\nconst[hideLine, setHideLine] = use\r\n\r\nconst dummyRanking = [\r\n    { lat: 1.462251, lng:  110.413307, ranking: 0.8 }, // London\r\n    { lat: 1.468643, lng: 110.428541, ranking: 0.6 }, // New York\r\n    // { lat: 34.0522, lng: -118.2437, ranking: 0.4 }, // Los Angeles\r\n    // { lat: 41.8781, lng: -87.6298, ranking: 0.5 }, // Chicago\r\n    // { lat: 37.7749, lng: -122.4194, ranking: 0.7 } // San Francisco\r\n];\r\n\r\nconst Heatmap = () => {\r\n    const lat = 1.462251; // Initial map center latitude\r\n    const lng = 110.413307; // Initial map center longitude\r\n\r\n    const handleClick = ()=>{\r\n\r\n    }\r\n\r\n    const controlPoints = []; // Array to store control points for curves\r\n\r\n    // Calculate control points\r\n    for (let i = 0; i < dummyRanking.length - 1; i++) {\r\n        const p1 = [dummyRanking[i].lat, dummyRanking[i].lng];\r\n        const p2 = [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng];\r\n\r\n        const controlPoint = [\r\n            (p1[0] + p2[0]) / 2, // Midpoint of latitudes\r\n            (p1[1] + p2[1]) / 2, // Midpoint of longitudes\r\n        ];\r\n\r\n        controlPoints.push(controlPoint);\r\n    }\r\n\r\n    return (\r\n        <Map center={[lat, lng]} zoom={13} style={{ width: '100%', height: '820px', margin: 'auto' }}>\r\n            <TileLayer\r\n                attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                maxZoom={16}\r\n                minZoom={2}\r\n            />\r\n            {dummyRanking.map((elem, i) => {\r\n                var l = (0.9 - dummyRanking[i].ranking * 0.9) * 255;\r\n                var h = (0.9 - dummyRanking[i].ranking * 0.9) * 240;\r\n                var a = dummyRanking[i].ranking * 0.9;\r\n                var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\r\n                return (\r\n                    <Circle\r\n                        key={i}\r\n                        center={{ lat: dummyRanking[i].lat, lng: dummyRanking[i].lng }}\r\n                        color='red'\r\n                        fillColor={rgb}\r\n                        fillOpacity={a}\r\n                        radius={50}\r\n                        onClick={handleClick}\r\n                        >\r\n                        <Tooltip><h3>Ranking:#{i + 1}</h3></Tooltip>\r\n                    </Circle>\r\n                )\r\n            })}\r\n            {/* Render curved lines between circles */}\r\n            {dummyRanking.length > 1 && controlPoints.map((controlPoint, i) => (\r\n                <Polyline\r\n                    key={i}\r\n                    positions={[\r\n                        [dummyRanking[i].lat, dummyRanking[i].lng], // Start point\r\n                        controlPoint, // Control point\r\n                        [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng], // End point\r\n                    ]}\r\n                    color=\"blue\"\r\n                />\r\n            ))}\r\n        </Map>\r\n    )\r\n}\r\n\r\nexport default Heatmap;\r\n"]},"metadata":{},"sourceType":"module"}