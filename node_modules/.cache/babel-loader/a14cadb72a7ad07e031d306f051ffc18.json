{"ast":null,"code":"'use client';\n\nimport _slicedToArray from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport { useCompoundParent } from '../useCompound';\n/**\n *\n * Demos:\n *\n * - [Tabs](https://mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabs API](https://mui.com/base-ui/react-tabs/hooks-api/#use-tabs)\n */\n\nfunction useTabs(parameters) {\n  var valueProp = parameters.value,\n      defaultValue = parameters.defaultValue,\n      onChange = parameters.onChange,\n      _parameters$orientati = parameters.orientation,\n      orientation = _parameters$orientati === void 0 ? 'horizontal' : _parameters$orientati,\n      _parameters$direction = parameters.direction,\n      direction = _parameters$direction === void 0 ? 'ltr' : _parameters$direction,\n      _parameters$selection = parameters.selectionFollowsFocus,\n      selectionFollowsFocus = _parameters$selection === void 0 ? false : _parameters$selection;\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Tabs',\n    state: 'value'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var onSelected = React.useCallback(function (event, newValue) {\n    setValue(newValue);\n    onChange == null || onChange(event, newValue);\n  }, [onChange, setValue]);\n\n  var _useCompoundParent = useCompoundParent(),\n      tabPanels = _useCompoundParent.subitems,\n      compoundComponentContextValue = _useCompoundParent.contextValue;\n\n  var tabIdLookup = React.useRef(function () {\n    return undefined;\n  });\n  var getTabPanelId = React.useCallback(function (tabValue) {\n    var _tabPanels$get;\n\n    return (_tabPanels$get = tabPanels.get(tabValue)) == null ? void 0 : _tabPanels$get.id;\n  }, [tabPanels]);\n  var getTabId = React.useCallback(function (tabPanelId) {\n    return tabIdLookup.current(tabPanelId);\n  }, []);\n  var registerTabIdLookup = React.useCallback(function (lookupFunction) {\n    tabIdLookup.current = lookupFunction;\n  }, []);\n  return {\n    contextValue: _extends({\n      direction: direction,\n      getTabId: getTabId,\n      getTabPanelId: getTabPanelId,\n      onSelected: onSelected,\n      orientation: orientation,\n      registerTabIdLookup: registerTabIdLookup,\n      selectionFollowsFocus: selectionFollowsFocus,\n      value: value\n    }, compoundComponentContextValue)\n  };\n}\n\nexport { useTabs };","map":null,"metadata":{},"sourceType":"module"}