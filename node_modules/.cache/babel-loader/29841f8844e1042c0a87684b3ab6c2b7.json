{"ast":null,"code":"import _classCallCheck from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\NotificationForm.js\";\nimport React from 'react';\nimport { Button, Grid, Form, Divider, Segment, Checkbox, Progress, Header, Popup, Icon } from 'semantic-ui-react';\nimport { DateInput } from 'semantic-ui-calendar-react';\n\nvar NotificationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NotificationForm, _React$Component);\n\n  function NotificationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NotificationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NotificationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(NotificationForm, [{\n    key: \"reason\",\n    value: function reason(x) {\n      if (x === 'NO') return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'reason_report',\n        label: \"If NO, please state the reason why this case been reported as dengue case\",\n        placeholder: \"Please key in...\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.currentStep !== 3) {\n        return null;\n      }\n\n      var values = this.props.values;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"New Notification Information\"), React.createElement(Segment, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        value: \"2\",\n        total: \"6\",\n        progress: \"ratio\",\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        centered: true,\n        columns: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        trigger: React.createElement(Icon, {\n          circular: true,\n          color: \"teal\",\n          name: \"help\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }),\n        position: \"bottom right\",\n        wide: \"very\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../img/notifInfo1.PNG'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: require('../img/notifInfo2.PNG'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })))), React.createElement(Grid.Row, {\n        centered: true,\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Form, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'clhos_name',\n        value: values.clhos_name,\n        label: \"Name of Clinic/Hospital that reporting this notification\",\n        placeholder: \"Please key in...\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'ward_name',\n        value: values.ward_name,\n        label: \"Ward Name\",\n        placeholder: \"Please key in...\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'reg_no',\n        value: values.reg_no,\n        label: \"Registration Number\",\n        placeholder: \"Please key in...\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Case Notofication Note\")), React.createElement(Button.Group, {\n        compact: true,\n        size: \"tiny\",\n        inverted: true,\n        color: \"orange\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        active: values.case_note === 'DF',\n        name: 'case_note',\n        value: 'DF',\n        content: \"DF\",\n        onClick: this.props.handleClick2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Button, {\n        active: values.case_note === 'DHF',\n        name: 'case_note',\n        value: 'DHF',\n        content: \"DHF\",\n        onClick: this.props.handleClick2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Button, {\n        active: values.case_note === 'DSS',\n        name: 'case_note',\n        value: 'DSS',\n        content: \"DSS\",\n        onClick: this.props.handleClick2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Button, {\n        active: values.case_note === 'SEVERE DENGUE',\n        name: 'case_note',\n        value: 'SEVERE DENGUE',\n        content: \"SEVERE DENGUE\",\n        onClick: this.props.handleClick2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(DateInput, {\n        label: \"Onset Date\",\n        required: true,\n        name: \"onset_date\",\n        placeholder: \"Date\",\n        value: values.onset_date,\n        dateFormat: \"YYYY-MM-DD\",\n        iconPosition: \"left\",\n        closable: true,\n        closeOnMouseLeave: false,\n        onChange: this.props.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(DateInput, {\n        label: \"Enter Date\",\n        name: \"enter_date\",\n        placeholder: \"Date\",\n        value: values.enter_date,\n        dateFormat: \"YYYY-MM-DD\",\n        iconPosition: \"left\",\n        closable: true,\n        closeOnMouseLeave: false,\n        onChange: this.props.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(DateInput, {\n        label: \"Diagnosis Date\",\n        name: \"diag_date\",\n        placeholder: \"Date\",\n        value: values.diag_date,\n        iconPosition: \"left\",\n        dateFormat: \"YYYY-MM-DD\",\n        closable: true,\n        closeOnMouseLeave: false,\n        popupPosition: 'right center',\n        onChange: this.props.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(DateInput, {\n        label: \"Notification Date\",\n        name: \"not_date\",\n        placeholder: \"Date\",\n        value: values.not_date,\n        dateFormat: \"YYYY-MM-DD\",\n        iconPosition: \"left\",\n        closable: true,\n        closeOnMouseLeave: false,\n        popupPosition: 'right center',\n        onChange: this.props.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(DateInput, {\n        label: \"Serology test Date\",\n        name: \"ser_date\",\n        placeholder: \"Date\",\n        value: values.ser_date,\n        dateFormat: \"YYYY-MM-DD\",\n        iconPosition: \"left\",\n        closable: true,\n        closeOnMouseLeave: false,\n        popupPosition: 'right center',\n        onChange: this.props.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Clinical symptoms:\")), React.createElement(Form.Input, {\n        value: values.symptoms,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Fever\",\n        value: 'Fever',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Joint Pain\",\n        value: 'Joint Pain',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Vomitting\",\n        value: 'Vomitting',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Altered Conciousness\",\n        value: 'Altered Conciousness',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Haemetesis\",\n        value: 'Haemetesis',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Fit\",\n        value: 'Fit',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Headache\",\n        value: 'Headache',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Myalgia / Muscle Ache\",\n        value: 'Myalgia / Muscle Ache',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Gum Bleeding\",\n        value: 'Gum Bleeding',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Ecchymosis\",\n        value: 'Ecchymosis',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Purpura\",\n        value: 'Purpura',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Nauseated\",\n        value: 'Nauseated',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Retroorbital Pain\",\n        value: 'Retroorbital Pain',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Backache\",\n        value: 'Backache',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Rash\",\n        value: 'Rash',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Petechiae\",\n        value: 'Petechiae',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Leukopenia\",\n        value: 'Leukopenia',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"symptoms\",\n        label: \"Malaena\",\n        value: 'Malaena',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'hess_test',\n        value: values.hess_test,\n        inline: true,\n        label: \"Hess's Test \",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Warning Sign:\")), React.createElement(Form.Input, {\n        value: values.warning,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        name: \"warning\",\n        label: \"Mucosal Bleed\",\n        value: 'Mucosal Bleed',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"warning\",\n        label: \"Enlarged Liver (>2cm)\",\n        value: 'Enlarged Liver (>2cm)',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"warning\",\n        label: \"Presistent Vomitting\",\n        value: 'Presistent Vomitting',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        name: \"warning\",\n        label: \"Abdominal Pain/Tenderness\",\n        value: 'Abdominal Pain/Tenderness',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"warning\",\n        label: \"Clinical Fluid Accumulation\",\n        value: 'Clinical Fluid Accumulation',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"warning\",\n        label: \"Lethargy/Restless\",\n        value: 'Lethargy/Restless',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'pcv_hem',\n        value: values.pcv_hem,\n        label: \"PCV/Hematocrit\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'wbc',\n        label: \"WBC\",\n        value: values.wbc,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'plt_count',\n        value: values.plt_count,\n        label: \"Platelet Count\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'hb',\n        value: values.hb,\n        label: \"HB\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Other Clinical symptoms:\")), React.createElement(Form.Input, {\n        value: values.other,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        hidden: true,\n        fitted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        name: 'other',\n        label: \"Epidemiological Link\",\n        value: 'Epidemiological Link',\n        control: Checkbox,\n        onChange: this.props.handleTick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Does this case meet the definition of dengue case:\\xA0\\xA0\\xA0\")), React.createElement(Button.Group, {\n        compact: true,\n        size: \"tiny\",\n        inverted: true,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Button, {\n        active: values.def_meet === 'YES' ? true : false,\n        name: 'def_meet',\n        value: 'YES',\n        content: \"YES\",\n        onClick: this.props.handleClick1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(Button, {\n        active: values.def_meet === 'NO' ? true : false,\n        name: 'def_meet',\n        value: 'NO',\n        content: \"NO\",\n        onClick: this.props.handleClick1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), this.reason(values.def_meet), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'dia_officer',\n        value: values.dia_officer,\n        label: \"Name of the officer who diagnosising this case\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'rep_officer',\n        value: values.rep_officer,\n        label: \"Name of the officer who reporting this case\",\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return NotificationForm;\n}(React.Component);\n\nexport default NotificationForm;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\NotificationForm.js"],"names":["React","Button","Grid","Form","Divider","Segment","Checkbox","Progress","Header","Popup","Icon","DateInput","NotificationForm","state","x","props","handleInput","currentStep","values","require","clhos_name","ward_name","reg_no","case_note","handleClick2","onset_date","handleDate","enter_date","diag_date","not_date","ser_date","symptoms","handleTick","hess_test","warning","pcv_hem","wbc","plt_count","hb","other","def_meet","handleClick1","reason","dia_officer","rep_officer","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Button,Grid,Form,Divider,Segment, Checkbox, Progress, Header,Popup,Icon} from 'semantic-ui-react'\r\nimport {DateInput} from 'semantic-ui-calendar-react';\r\nclass NotificationForm extends React.Component{\r\n    reason(x){\r\n        if(x==='NO')\r\n        return(\r\n            <div>\r\n                <Form.Input \r\n                    name={'reason_report'}\r\n                    label='If NO, please state the reason why this case been reported as dengue case'\r\n                    placeholder='Please key in...'\r\n                    onChange={this.props.handleInput}/>\r\n            </div>\r\n            )\r\n    }\r\n\r\n    state={}\r\n\r\n    render(){\r\n        if(this.props.currentStep !==3){\r\n            return null\r\n        }\r\n        const { values } = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <Header as='h2'textAlign='center'>New Notification Information</Header>\r\n                <Segment basic>\r\n                    <Progress value='2' total='6' progress='ratio' color='orange'/>\r\n                </Segment>\r\n                    <Grid>\r\n                    <Grid.Row centered columns={1}>\r\n                        <Grid.Column textAlign='right'>\r\n                            <Popup \r\n                                trigger={<Icon circular color='teal' name='help' />} \r\n                                position='bottom right'\r\n                                wide='very'>\r\n                                <img src={ require('../img/notifInfo1.PNG')}/>\r\n                                <img src={ require('../img/notifInfo2.PNG')}/>\r\n                            </Popup>\r\n                        </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row centered columns={2}>\r\n                            <Grid.Column>\r\n                                <Form widths='equal'>\r\n                                    <Form.Input \r\n                                        name={'clhos_name'}\r\n                                        value={values.clhos_name} \r\n                                        label='Name of Clinic/Hospital that reporting this notification'\r\n                                        placeholder='Please key in...'\r\n                                        onChange={this.props.handleInput}/>\r\n                                <Form.Group>\r\n                                    <Form.Input name={'ward_name'} value={values.ward_name} label='Ward Name' placeholder='Please key in...' onChange={this.props.handleInput}/>\r\n                                    <Form.Input name={'reg_no'} value={values.reg_no} label='Registration Number' placeholder='Please key in...' onChange={this.props.handleInput}/>\r\n                                </Form.Group>\r\n                                <label><strong>Case Notofication Note</strong></label>\r\n                                    <Button.Group compact size={\"tiny\"} inverted color='orange' fluid>\r\n                                        <Button active={values.case_note==='DF'} name={'case_note'} value={'DF'} content='DF' onClick={this.props.handleClick2}/>\r\n                                        <Button active={values.case_note==='DHF'}  name={'case_note'} value={'DHF'} content='DHF' onClick={this.props.handleClick2}/>\r\n                                        <Button active={values.case_note==='DSS'}  name={'case_note'} value={'DSS'} content='DSS' onClick={this.props.handleClick2}/>\r\n                                        <Button active={values.case_note==='SEVERE DENGUE'}  name={'case_note'} value={'SEVERE DENGUE'} content='SEVERE DENGUE' onClick={this.props.handleClick2}/>\r\n                                    </Button.Group>\r\n                                    <Divider hidden/>\r\n                                    <Form.Group>\r\n                                        <DateInput\r\n                                            label='Onset Date'\r\n                                            required\r\n                                            name=\"onset_date\"\r\n                                            placeholder=\"Date\"\r\n                                            value={values.onset_date}\r\n                                            dateFormat=\"YYYY-MM-DD\"\r\n                                            iconPosition=\"left\"\r\n                                            closable={true}\r\n                                            closeOnMouseLeave={false}\r\n                                            onChange={this.props.handleDate}/>\r\n                                        <DateInput\r\n                                            label='Enter Date'\r\n                                            name=\"enter_date\"\r\n                                            placeholder=\"Date\"\r\n                                            value={values.enter_date}\r\n                                            dateFormat=\"YYYY-MM-DD\"\r\n                                            iconPosition=\"left\"\r\n                                            closable={true}\r\n                                            closeOnMouseLeave={false}\r\n                                            onChange={this.props.handleDate} />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <DateInput\r\n                                            label='Diagnosis Date'\r\n                                            name=\"diag_date\"\r\n                                            placeholder=\"Date\"\r\n                                            value={values.diag_date}\r\n                                            iconPosition=\"left\"\r\n                                            dateFormat=\"YYYY-MM-DD\"\r\n                                            closable={true}\r\n                                            closeOnMouseLeave={false}\r\n                                            popupPosition={'right center'}\r\n                                            onChange={this.props.handleDate} />\r\n                                        <DateInput\r\n                                            label='Notification Date'\r\n                                            name=\"not_date\"\r\n                                            placeholder=\"Date\"\r\n                                            value={values.not_date}\r\n                                            dateFormat=\"YYYY-MM-DD\"\r\n                                            iconPosition=\"left\"\r\n                                            closable={true}\r\n                                            closeOnMouseLeave={false}\r\n                                            popupPosition={'right center'}\r\n                                            onChange={this.props.handleDate} />\r\n                                        <DateInput\r\n                                            label='Serology test Date'\r\n                                            name=\"ser_date\"\r\n                                            placeholder=\"Date\"\r\n                                            value={values.ser_date}\r\n                                            dateFormat=\"YYYY-MM-DD\"\r\n                                            iconPosition=\"left\"\r\n                                            closable={true}\r\n                                            closeOnMouseLeave={false}\r\n                                            popupPosition={'right center'}\r\n                                            onChange={this.props.handleDate} />    \r\n                                    </Form.Group>\r\n                                    <Divider hidden/>\r\n                                    <label><strong>Clinical symptoms:</strong></label>\r\n                                    <Form.Input value={values.symptoms} readOnly />\r\n                                    <Divider hidden/>\r\n                                    <Form.Group>\r\n                                        <Form.Field name='symptoms' label='Fever' value={'Fever'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Joint Pain' value={'Joint Pain'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Vomitting' value={'Vomitting'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Altered Conciousness' value={'Altered Conciousness'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Haemetesis' value={'Haemetesis' } control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Fit' value={'Fit'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Field name='symptoms' label='Headache' value={'Headache'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Myalgia / Muscle Ache' value={'Myalgia / Muscle Ache'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Gum Bleeding' value={'Gum Bleeding'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Ecchymosis' value={'Ecchymosis'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Purpura' value={'Purpura'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Nauseated' value={'Nauseated'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Field name='symptoms' label='Retroorbital Pain' value={'Retroorbital Pain'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Backache' value={'Backache'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Rash' value={'Rash'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Petechiae' value={'Petechiae'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Leukopenia' value={'Leukopenia'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='symptoms' label='Malaena' value={'Malaena'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Input name={'hess_test'} value={values.hess_test} inline label='Hess&#39;s Test ' onChange={this.props.handleInput} />\r\n                                    </Form.Group>\r\n                                    <Divider hidden/>\r\n                                    <label><strong>Warning Sign:</strong></label>\r\n                                    <Form.Input value={values.warning} readOnly />\r\n                                    <Divider hidden/>\r\n                                    <Form.Group>\r\n                                        <Form.Field name='warning' label='Mucosal Bleed' value={'Mucosal Bleed'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='warning' label='Enlarged Liver (>2cm)' value={'Enlarged Liver (>2cm)'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='warning' label='Presistent Vomitting' value={'Presistent Vomitting'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Field name='warning' label='Abdominal Pain/Tenderness' value={'Abdominal Pain/Tenderness'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='warning' label='Clinical Fluid Accumulation' value={'Clinical Fluid Accumulation'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                        <Form.Field name='warning' label='Lethargy/Restless' value={'Lethargy/Restless'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Input name={'pcv_hem'} value={values.pcv_hem} label='PCV/Hematocrit' onChange={this.props.handleInput}/>\r\n                                        <Form.Input name={'wbc'} label='WBC' value={values.wbc} onChange={this.props.handleInput}/>\r\n                                        <Form.Input name={'plt_count'} value={values.plt_count} label='Platelet Count' onChange={this.props.handleInput}/>\r\n                                        <Form.Input name={'hb'} value={values.hb} label='HB' onChange={this.props.handleInput}/>\r\n                                    </Form.Group>\r\n                                    <Divider hidden/>\r\n                                    <label><strong>Other Clinical symptoms:</strong></label>\r\n                                    <Form.Input value={values.other} readOnly />\r\n                                    <Divider hidden fitted/>\r\n                                    <Form.Group>\r\n                                        <Form.Field name={'other'} label='Epidemiological Link' value={'Epidemiological Link'} control={Checkbox} onChange={this.props.handleTick}/>\r\n                                    </Form.Group>\r\n                                    <label><strong>Does this case meet the definition of dengue case:&nbsp;&nbsp;&nbsp;</strong></label>\r\n                                    <Button.Group compact size={\"tiny\"} inverted color='red'>\r\n                                        <Button active={values.def_meet==='YES'?true:false} name={'def_meet'} value={'YES'} content='YES' onClick={this.props.handleClick1}/>\r\n                                        <Button active={values.def_meet==='NO'?true:false}  name={'def_meet'} value={'NO'} content='NO' onClick={this.props.handleClick1}/>\r\n                                    </Button.Group>\r\n                                    {this.reason(values.def_meet)}\r\n                                    <Form.Group>\r\n                                        <Form.Input name={'dia_officer'} value={values.dia_officer} label='Name of the officer who diagnosising this case' onChange={this.props.handleInput}/>\r\n                                        <Form.Input name={'rep_officer'} value={values.rep_officer} label='Name of the officer who reporting this case' onChange={this.props.handleInput}/>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default NotificationForm"]},"metadata":{},"sourceType":"module"}