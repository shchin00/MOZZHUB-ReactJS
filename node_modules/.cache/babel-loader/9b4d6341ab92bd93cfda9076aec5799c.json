{"ast":null,"code":"'use client'; // do not remove the following import (https://github.com/microsoft/TypeScript/issues/29808#issuecomment-1320713018)\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// @ts-ignore\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\nimport THEME_ID from './identifier';\nvar defaultTheme = experimental_extendTheme();\n\nvar _createCssVarsProvide = createCssVarsProvider({\n  themeId: THEME_ID,\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  resolveTheme: function resolveTheme(theme) {\n    var newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n\n    return newTheme;\n  },\n  excludeVariablesFromRoot: excludeVariablesFromRoot\n}),\n    CssVarsProvider = _createCssVarsProvide.CssVarsProvider,\n    useColorScheme = _createCssVarsProvide.useColorScheme,\n    getInitColorSchemeScript = _createCssVarsProvide.getInitColorSchemeScript;\n\nexport { useColorScheme, getInitColorSchemeScript, CssVarsProvider as Experimental_CssVarsProvider };","map":null,"metadata":{},"sourceType":"module"}