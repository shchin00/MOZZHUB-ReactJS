{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport { DropdownContext } from '../useDropdown/DropdownContext';\nimport { useDropdown } from '../useDropdown/useDropdown';\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Dropdown API](https://mui.com/base-ui/react-menu/components-api/#dropdown)\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction Dropdown(props) {\n  var children = props.children,\n      open = props.open,\n      defaultOpen = props.defaultOpen,\n      onOpenChange = props.onOpenChange;\n\n  var _useDropdown = useDropdown({\n    defaultOpen: defaultOpen,\n    onOpenChange: onOpenChange,\n    open: open\n  }),\n      contextValue = _useDropdown.contextValue;\n\n  return (\n    /*#__PURE__*/\n    _jsx(DropdownContext.Provider, {\n      value: contextValue,\n      children: children\n    })\n  );\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Dropdown.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the dropdown is initially open.\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Callback fired when the component requests to be opened or closed.\n   */\n  onOpenChange: PropTypes.func,\n\n  /**\n   * Allows to control whether the dropdown is open.\n   * This is a controlled counterpart of `defaultOpen`.\n   */\n  open: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Dropdown['propTypes' + ''] = exactProp(Dropdown.propTypes);\n}\n\nexport { Dropdown };","map":null,"metadata":{},"sourceType":"module"}