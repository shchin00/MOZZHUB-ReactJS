{"ast":null,"code":"import _toConsumableArray from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\MasterForm.js\";\nimport React from 'react';\nimport MenuBar from './MenuBar';\nimport { Button, Grid, Modal, Header, Icon } from 'semantic-ui-react';\nimport CaseForm from './CaseForm';\nimport PatientForm from './PatientForm';\nimport NotificationForm from './NotificationForm';\nimport PrimeClinicForm from './PrimeClinicForm';\nimport ReferenceForm from './ReferenceForm';\nimport MobilityForm from './MobilityForm';\nimport config from '../config';\n\nvar MasterForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MasterForm, _React$Component);\n\n  function MasterForm(props) {\n    var _this;\n\n    _classCallCheck(this, MasterForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MasterForm).call(this, props));\n\n    _this.handleDate = function (event, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      var className = _this.state.className;\n\n      _this.setState(function (prevState) {\n        return _defineProperty({}, className, _objectSpread({}, prevState[className], _defineProperty({}, name, value)));\n      });\n    };\n\n    var area = sessionStorage.getItem('area');\n    var newSelectionArray = [];\n    var tempWarn = [];\n    var str = sessionStorage.getItem('area');\n    var acronym = str.split(/\\s/).reduce(function (response, word) {\n      return response += word.slice(0, 1);\n    }, '') + Math.round(parseInt(Date.now() * Math.random()) / 1000000000); //let id = parseInt(Date.now() * Math.random())\n\n    _this.state = {\n      open: false,\n      httpCode: 0,\n      currentStep: 1,\n      className: 'caseInfo',\n      caseInfo: {\n        case_no: acronym,\n        case_note: '',\n        case_area: area,\n        case_type: '',\n        eweek: '',\n        outbreaks_loc: '',\n        outbreaks_first: ''\n      },\n      patientData: {\n        pat_name: '',\n        race: '',\n        nationality: '',\n        age: '',\n        gender: '',\n        occp: '',\n        esc_name: '',\n        ic_num: '',\n        ic_type: '',\n        curr_add: '',\n        curr_add_type: '',\n        curr_add_tel: '',\n        curr_add_hp: '',\n        oth_add: '',\n        oth_add_type: '',\n        oth_add_tel: '',\n        oth_add_hp: ''\n      },\n      NotifData: {\n        clhos_name: '',\n        ward_name: '',\n        reg_no: '',\n        date: '',\n        onset_date: '',\n        enter_date: '',\n        diag_date: '',\n        not_date: '',\n        ser_date: '',\n        hess_test: '',\n        test_data: '',\n        pcv_hem: '',\n        wbc: '',\n        plt_count: '',\n        hb: '',\n        other: '',\n        reason_report: '',\n        dia_officer: '',\n        rep_officer: '',\n        def_meet: '',\n        symInfo: '',\n        symptoms: newSelectionArray,\n        warning: tempWarn\n      },\n      PriCliData: {\n        clinicP_name: '',\n        clinicP_sym: '',\n        clinicP_creat: '',\n        clinicP_RPPD: '',\n        visit_date: '',\n        dig_note: ''\n      },\n      ReferData: {\n        refer_party: '',\n        refer_partyName: '',\n        refer_dig: '',\n        refer_date: '',\n        receiver_name: '',\n        investigator_name: '',\n        reportor_name: '',\n        receive_date: '',\n        investigate_date: '',\n        report_date: ''\n      }\n    };\n    _this._next = _this._next.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._prev = _this._prev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._save = _this._save.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick1 = _this.handleClick1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDropdown = _this.handleDropdown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTick = _this.handleTick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDate = _this.handleDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MasterForm, [{\n    key: \"_next\",\n    value: function _next() {\n      var currentStep = this.state.currentStep;\n      var className = this.state.className;\n      currentStep = currentStep >= 1 ? currentStep + 1 : null;\n\n      switch (currentStep) {\n        case 1:\n          className = 'caseInfo';\n          break;\n\n        case 2:\n          className = 'patientData';\n          break;\n\n        case 3:\n          className = 'NotifData';\n          break;\n\n        case 4:\n          className = 'PriCliData';\n          break;\n\n        case 5:\n          className = 'ReferData';\n          break;\n\n        case 6:\n          className = 'MobData';\n          break;\n      }\n\n      this.setState({\n        currentStep: currentStep,\n        className: className\n      });\n    }\n  }, {\n    key: \"_prev\",\n    value: function _prev() {\n      var currentStep = this.state.currentStep;\n      var className = this.state.className;\n      currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n\n      switch (currentStep) {\n        case 1:\n          className = 'caseInfo';\n          break;\n\n        case 2:\n          className = 'patientData';\n          break;\n\n        case 3:\n          className = 'NotifData';\n          break;\n\n        case 4:\n          className = 'PriCliData';\n          break;\n\n        case 5:\n          className = 'ReferData';\n          break;\n      }\n\n      this.setState({\n        currentStep: currentStep,\n        className: className\n      });\n    }\n  }, {\n    key: \"_save\",\n    value: function _save() {\n      var url = \"\".concat(config.url, \"/save\");\n      var _this$state = this.state,\n          caseInfo = _this$state.caseInfo,\n          patientData = _this$state.patientData,\n          NotifData = _this$state.NotifData,\n          PriCliData = _this$state.PriCliData,\n          ReferData = _this$state.ReferData;\n      var data = {\n        caseInfo: caseInfo,\n        patientData: patientData,\n        NotifData: NotifData,\n        PriCliData: PriCliData,\n        ReferData: ReferData //console.log(data)\n\n      };\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: data\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(this.setState({\n        currentStep: 6\n      }));\n    }\n  }, {\n    key: \"handleTick\",\n    value: function handleTick(e) {\n      var className = this.state.className;\n      var name = e.target.previousElementSibling.name; //console.log(name)\n\n      var newSelection = e.target.previousElementSibling.value;\n      var newSelectionArray;\n\n      if (this.state[className][name].indexOf(newSelection) > -1) {\n        newSelectionArray = this.state[className][name].filter(function (s) {\n          return s !== newSelection;\n        });\n      } else {\n        newSelectionArray = _toConsumableArray(this.state[className][name]).concat([newSelection]);\n      } //console.log(newSelectionArray)\n\n\n      this.setState(function (prevState) {\n        return _defineProperty({}, className, _objectSpread({}, prevState[className], _defineProperty({}, name, newSelectionArray)));\n      });\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      var className = this.state.className;\n      var value = e.target.value;\n      var name = e.target.name; //console.log(e.target)\n\n      this.setState(function (prevState) {\n        return _defineProperty({}, className, _objectSpread({}, prevState[className], _defineProperty({}, name, value)));\n      });\n    }\n  }, {\n    key: \"handleClick1\",\n    value: function handleClick1(e) {\n      var className = this.state.className;\n      var value = e.target.value; //console.log(value)\n\n      var name = e.target.name;\n      this.setState(function (prevState) {\n        return _defineProperty({}, className, _objectSpread({}, prevState[className], _defineProperty({}, name, value)));\n      });\n    }\n  }, {\n    key: \"handleDropdown\",\n    value: function handleDropdown(e, _ref6) {\n      var value = _ref6.value,\n          name = _ref6.name;\n      var className = this.state.className;\n      this.setState(function (prevState) {\n        return _defineProperty({}, className, _objectSpread({}, prevState[className], _defineProperty({}, name, value)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$caseInfo = this.state.caseInfo,\n          case_no = _this$state$caseInfo.case_no,\n          case_note = _this$state$caseInfo.case_note,\n          case_area = _this$state$caseInfo.case_area,\n          case_type = _this$state$caseInfo.case_type,\n          eweek = _this$state$caseInfo.eweek,\n          outbreaks_loc = _this$state$caseInfo.outbreaks_loc,\n          outbreaks_first = _this$state$caseInfo.outbreaks_first;\n      var _this$state$patientDa = this.state.patientData,\n          pat_name = _this$state$patientDa.pat_name,\n          race = _this$state$patientDa.race,\n          nationality = _this$state$patientDa.nationality,\n          age = _this$state$patientDa.age,\n          gender = _this$state$patientDa.gender,\n          occp = _this$state$patientDa.occp,\n          esc_name = _this$state$patientDa.esc_name,\n          ic_num = _this$state$patientDa.ic_num,\n          ic_type = _this$state$patientDa.ic_type,\n          curr_add = _this$state$patientDa.curr_add,\n          curr_add_hp = _this$state$patientDa.curr_add_hp,\n          curr_add_tel = _this$state$patientDa.curr_add_tel,\n          oth_add = _this$state$patientDa.oth_add,\n          oth_add_hp = _this$state$patientDa.oth_add_hp,\n          oth_add_tel = _this$state$patientDa.oth_add_tel,\n          oth_add_type = _this$state$patientDa.oth_add_type;\n      var _this$state$NotifData = this.state.NotifData,\n          clhos_name = _this$state$NotifData.clhos_name,\n          ward_name = _this$state$NotifData.ward_name,\n          reg_no = _this$state$NotifData.reg_no,\n          date = _this$state$NotifData.date,\n          onset_date = _this$state$NotifData.onset_date,\n          enter_date = _this$state$NotifData.enter_date,\n          diag_date = _this$state$NotifData.diag_date,\n          not_date = _this$state$NotifData.not_date,\n          ser_date = _this$state$NotifData.ser_date,\n          hess_test = _this$state$NotifData.hess_test,\n          test_data = _this$state$NotifData.test_data,\n          pcv_hem = _this$state$NotifData.pcv_hem,\n          wbc = _this$state$NotifData.wbc,\n          plt_count = _this$state$NotifData.plt_count,\n          hb = _this$state$NotifData.hb,\n          other = _this$state$NotifData.other,\n          reason_report = _this$state$NotifData.reason_report,\n          dia_officer = _this$state$NotifData.dia_officer,\n          rep_officer = _this$state$NotifData.rep_officer,\n          def_meet = _this$state$NotifData.def_meet,\n          symInfo = _this$state$NotifData.symInfo,\n          symptoms = _this$state$NotifData.symptoms,\n          warning = _this$state$NotifData.warning;\n      var _this$state$PriCliDat = this.state.PriCliData,\n          clinicP_name = _this$state$PriCliDat.clinicP_name,\n          clinicP_sym = _this$state$PriCliDat.clinicP_sym,\n          clinicP_creat = _this$state$PriCliDat.clinicP_creat,\n          clinicP_RPPD = _this$state$PriCliDat.clinicP_RPPD,\n          visit_date = _this$state$PriCliDat.visit_date,\n          dig_note = _this$state$PriCliDat.dig_note;\n      var _this$state$ReferData = this.state.ReferData,\n          refer_party = _this$state$ReferData.refer_party,\n          refer_partyName = _this$state$ReferData.refer_partyName,\n          refer_dig = _this$state$ReferData.refer_dig,\n          refer_date = _this$state$ReferData.refer_date,\n          receiver_name = _this$state$ReferData.receiver_name,\n          investigator_name = _this$state$ReferData.investigator_name,\n          reportor_name = _this$state$ReferData.reportor_name,\n          receive_date = _this$state$ReferData.receive_date,\n          investigate_date = _this$state$ReferData.investigate_date,\n          report_date = _this$state$ReferData.report_date;\n      var values = {\n        case_no: case_no,\n        case_note: case_note,\n        case_area: case_area,\n        case_type: case_type,\n        eweek: eweek,\n        outbreaks_loc: outbreaks_loc,\n        outbreaks_first: outbreaks_first,\n        pat_name: pat_name,\n        race: race,\n        nationality: nationality,\n        age: age,\n        gender: gender,\n        occp: occp,\n        esc_name: esc_name,\n        ic_num: ic_num,\n        ic_type: ic_type,\n        curr_add: curr_add,\n        curr_add_hp: curr_add_hp,\n        curr_add_tel: curr_add_tel,\n        oth_add: oth_add,\n        oth_add_hp: oth_add_hp,\n        oth_add_tel: oth_add_tel,\n        oth_add_type: oth_add_type,\n        clhos_name: clhos_name,\n        ward_name: ward_name,\n        reg_no: reg_no,\n        date: date,\n        onset_date: onset_date,\n        enter_date: enter_date,\n        diag_date: diag_date,\n        not_date: not_date,\n        ser_date: ser_date,\n        hess_test: hess_test,\n        test_data: test_data,\n        pcv_hem: pcv_hem,\n        wbc: wbc,\n        plt_count: plt_count,\n        hb: hb,\n        other: other,\n        reason_report: reason_report,\n        dia_officer: dia_officer,\n        rep_officer: rep_officer,\n        def_meet: def_meet,\n        symInfo: symInfo,\n        symptoms: symptoms,\n        warning: warning,\n        clinicP_name: clinicP_name,\n        clinicP_sym: clinicP_sym,\n        clinicP_creat: clinicP_creat,\n        clinicP_RPPD: clinicP_RPPD,\n        visit_date: visit_date,\n        dig_note: dig_note,\n        refer_party: refer_party,\n        refer_partyName: refer_partyName,\n        refer_dig: refer_dig,\n        refer_date: refer_date,\n        receiver_name: receiver_name,\n        investigator_name: investigator_name,\n        reportor_name: reportor_name,\n        receive_date: receive_date,\n        investigate_date: investigate_date,\n        report_date: report_date\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(MenuBar, {\n        activeItem: \"new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(CaseForm, {\n        currentStep: this.state.currentStep,\n        handleInput: this.handleInput,\n        handleClick1: this.handleClick1,\n        values: values,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(PatientForm, {\n        currentStep: this.state.currentStep,\n        handleInput: this.handleInput,\n        handleDropdown: this.handleDropdown,\n        values: values,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(NotificationForm, {\n        currentStep: this.state.currentStep,\n        handleInput: this.handleInput,\n        handleDate: this.handleDate,\n        handleClick1: this.handleClick1,\n        handleTick: this.handleTick,\n        values: values,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }), React.createElement(PrimeClinicForm, {\n        currentStep: this.state.currentStep,\n        handleInput: this.handleInput,\n        handleDate: this.handleDate,\n        handleClick1: this.handleClick1,\n        values: values,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }), React.createElement(ReferenceForm, {\n        currentStep: this.state.currentStep,\n        handleInput: this.handleInput,\n        handleDate: this.handleDate,\n        values: values,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }), React.createElement(MobilityForm, {\n        currentStep: this.state.currentStep,\n        caseID: this.state.caseInfo.case_no,\n        onset: this.state.NotifData.onset_date,\n        address: this.state.patientData.curr_add,\n        other_add: this.state.patientData.oth_add,\n        area: this.state.caseInfo.case_area,\n        handleClick1: this.handleClick1,\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, this.previousButton, this.nextButton, this.saveButton)));\n    }\n  }, {\n    key: \"previousButton\",\n    get: function get() {\n      var currentStep = this.state.currentStep;\n\n      if (currentStep !== 1 && currentStep < 6) {\n        return React.createElement(Button, {\n          primary: true,\n          content: \"Prev\",\n          onClick: this._prev,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"nextButton\",\n    get: function get() {\n      var _this2 = this;\n\n      var currentStep = this.state.currentStep;\n\n      if (currentStep < 5) {\n        return React.createElement(Button, {\n          primary: true,\n          content: \"Next\",\n          onClick: this._next,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        });\n      } else if (currentStep === 5) {\n        return React.createElement(Modal, {\n          basic: true,\n          open: this.state.open,\n          size: \"small\" //trigger={<Button onClick={()=>this.setState({open:true})}>Basic Modal</Button>}\n          ,\n          trigger: React.createElement(Button, {\n            primary: true,\n            content: \"Save and Next to Mobility Form\",\n            onClick: function onClick() {\n              return _this2.setState({\n                open: true\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(Header, {\n          icon: true,\n          color: \"orange\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"exclamation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, \"Non Editable After Save\")), React.createElement(Modal.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, \" Please make sure the following details are filled before submit:\"), React.createElement(\"ul\", {\n          style: {\n            display: 'inline-block',\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, \"Case ID\"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, \"Residential Address\"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, \"Onset Date\")))), React.createElement(Modal.Actions, {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"red\",\n          inverted: true,\n          onClick: function onClick() {\n            return _this2.setState({\n              open: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"remove\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }), \" Go Back\"), React.createElement(Button, {\n          color: \"green\",\n          inverted: true,\n          onClick: this._save,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }), \" Cofirm and Save\")));\n      }\n      /* else if (currentStep===6){\r\n          return(\r\n              <Button primary content='Save' onClick={this._save}/>\r\n          )\r\n      } */\n\n\n      return null;\n    }\n  }]);\n\n  return MasterForm;\n}(React.Component);\n\nexport default MasterForm;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\MasterForm.js"],"names":["React","MenuBar","Button","Grid","Modal","Header","Icon","CaseForm","PatientForm","NotificationForm","PrimeClinicForm","ReferenceForm","MobilityForm","config","MasterForm","props","handleDate","event","name","value","className","state","setState","prevState","area","sessionStorage","getItem","newSelectionArray","tempWarn","str","acronym","split","reduce","response","word","slice","Math","round","parseInt","Date","now","random","open","httpCode","currentStep","caseInfo","case_no","case_note","case_area","case_type","eweek","outbreaks_loc","outbreaks_first","patientData","pat_name","race","nationality","age","gender","occp","esc_name","ic_num","ic_type","curr_add","curr_add_type","curr_add_tel","curr_add_hp","oth_add","oth_add_type","oth_add_tel","oth_add_hp","NotifData","clhos_name","ward_name","reg_no","date","onset_date","enter_date","diag_date","not_date","ser_date","hess_test","test_data","pcv_hem","wbc","plt_count","hb","other","reason_report","dia_officer","rep_officer","def_meet","symInfo","symptoms","warning","PriCliData","clinicP_name","clinicP_sym","clinicP_creat","clinicP_RPPD","visit_date","dig_note","ReferData","refer_party","refer_partyName","refer_dig","refer_date","receiver_name","investigator_name","reportor_name","receive_date","investigate_date","report_date","_next","bind","_prev","_save","handleInput","handleClick1","handleDropdown","handleTick","url","data","fetch","method","headers","body","JSON","stringify","then","json","e","target","previousElementSibling","newSelection","indexOf","filter","s","values","history","previousButton","nextButton","saveButton","textAlign","display","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport MenuBar from './MenuBar'\r\nimport {Button,Grid,Modal,Header,Icon} from 'semantic-ui-react'\r\nimport CaseForm from './CaseForm'\r\nimport PatientForm from './PatientForm'\r\nimport NotificationForm from './NotificationForm'\r\nimport PrimeClinicForm from './PrimeClinicForm'\r\nimport ReferenceForm from './ReferenceForm'\r\nimport MobilityForm from './MobilityForm';\r\nimport config from '../config'\r\n\r\nclass MasterForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        let area = sessionStorage.getItem('area');\r\n        let newSelectionArray=[]\r\n        let tempWarn = []\r\n        let str = sessionStorage.getItem('area');\r\n        let acronym = str.split(/\\s/).reduce((response,word)=> response+=word.slice(0,1),'')+Math.round((parseInt(Date.now() * Math.random()))/1000000000)\r\n        //let id = parseInt(Date.now() * Math.random())\r\n        this.state={\r\n            open:false,\r\n            httpCode:0,\r\n            currentStep:1,\r\n            className:'caseInfo',\r\n            caseInfo:{\r\n                case_no:acronym,\r\n                case_note:'',\r\n                case_area:area,\r\n                case_type:'',\r\n                eweek:'',\r\n                outbreaks_loc:'',\r\n                outbreaks_first:''},\r\n            patientData:{\r\n                pat_name:'',\r\n                race:'',\r\n                nationality:'',\r\n                age:'',\r\n                gender:'',\r\n                occp:'',\r\n                esc_name:'',\r\n                ic_num:'',\r\n                ic_type:'',\r\n                curr_add:'',\r\n                curr_add_type:'',\r\n                curr_add_tel:'',\r\n                curr_add_hp:'',\r\n                oth_add:'',\r\n                oth_add_type:'',\r\n                oth_add_tel:'',\r\n                oth_add_hp:''},\r\n            NotifData:{\r\n                clhos_name:'',\r\n                ward_name:'',\r\n                reg_no:'',\r\n                date:'',\r\n                onset_date: '',\r\n                enter_date:'',\r\n                diag_date:'',\r\n                not_date:'',\r\n                ser_date:'',\r\n                hess_test:'',\r\n                test_data:'',\r\n                pcv_hem:'',\r\n                wbc:'',\r\n                plt_count:'',\r\n                hb:'',\r\n                other:'',\r\n                reason_report:'',\r\n                dia_officer:'',\r\n                rep_officer:'',\r\n                def_meet:'',\r\n                symInfo:'',\r\n                symptoms:newSelectionArray,\r\n                warning:tempWarn},\r\n            PriCliData:{\r\n                clinicP_name:'',\r\n                clinicP_sym:'',\r\n                clinicP_creat:'', \r\n                clinicP_RPPD:'',\r\n                visit_date:'',\r\n                dig_note:''\r\n            },\r\n            ReferData:{\r\n                refer_party:'',\r\n                refer_partyName:'',\r\n                refer_dig:'', \r\n                refer_date:'',\r\n                receiver_name:'',\r\n                investigator_name:'',\r\n                reportor_name:'',\r\n                receive_date:'',\r\n                investigate_date:'',\r\n                report_date:''\r\n            }\r\n        }\r\n        this._next = this._next.bind(this)\r\n        this._prev = this._prev.bind(this)\r\n        this._save = this._save.bind(this)\r\n        this.handleInput = this.handleInput.bind(this)\r\n        this.handleClick1 = this.handleClick1.bind(this)\r\n        this.handleDropdown = this.handleDropdown.bind(this)\r\n        this.handleTick = this.handleTick.bind(this)\r\n        this.handleDate = this.handleDate.bind(this)\r\n\r\n    }\r\n\r\n\r\n    _next(){\r\n        let currentStep = this.state.currentStep\r\n        let className = this.state.className\r\n        currentStep = currentStep >= 1?currentStep+1:null\r\n        switch(currentStep){\r\n            case 1:\r\n                className = 'caseInfo';\r\n            break;    \r\n            case 2:\r\n                className = 'patientData';\r\n            break;\r\n            case 3:\r\n                className = 'NotifData';\r\n            break;\r\n            case 4:\r\n                className = 'PriCliData';\r\n            break;\r\n            case 5:\r\n                className = 'ReferData';\r\n            break;\r\n            case 6:\r\n                className = 'MobData';\r\n            break;\r\n\r\n        }\r\n        this.setState({\r\n            currentStep:currentStep,\r\n            className:className\r\n        })\r\n    }\r\n\r\n    _prev(){\r\n        let currentStep = this.state.currentStep\r\n        let className = this.state.className\r\n        currentStep = currentStep <= 1?1: currentStep-1\r\n        switch(currentStep){\r\n            case 1:\r\n                className = 'caseInfo';\r\n            break;    \r\n            case 2:\r\n                className = 'patientData';\r\n            break;\r\n            case 3:\r\n                className = 'NotifData';\r\n            break;\r\n            case 4:\r\n                className = 'PriCliData';\r\n            break;\r\n            case 5:\r\n                className = 'ReferData';\r\n            break;\r\n        }\r\n        this.setState({\r\n            currentStep:currentStep,\r\n            className:className\r\n        })\r\n    }\r\n    _save(){\r\n        let url = `${config.url}/save`\r\n        const {caseInfo,patientData,NotifData,PriCliData,ReferData}=this.state\r\n        const data = {caseInfo,patientData,NotifData,PriCliData,ReferData} \r\n        //console.log(data)\r\n        fetch(url,{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({data})\r\n            \r\n        })\r\n        .then(response=>response.json())\r\n        .then(this.setState({currentStep:6}))\r\n    }\r\n\r\n    handleTick(e){\r\n        let className = this.state.className;\r\n        let name = e.target.previousElementSibling.name\r\n        //console.log(name)\r\n        const newSelection = e.target.previousElementSibling.value;\r\n        let newSelectionArray;\r\n        if(this.state[className][name].indexOf(newSelection)>-1){\r\n            newSelectionArray = this.state[className][name].filter(s => s!== newSelection)\r\n        }else{\r\n            newSelectionArray=[...this.state[className][name],newSelection];\r\n        }\r\n        //console.log(newSelectionArray)\r\n        this.setState(prevState =>{\r\n            return{\r\n                [className]:{\r\n                    ...prevState[className],[name]:newSelectionArray\r\n                }\r\n                /* ...prevState, symptoms:newSelectionArray, */}},)\r\n    }\r\n\r\n    handleDate = (event, {name, value}) => {\r\n        let className = this.state.className;\r\n            this.setState(prevState=>{\r\n                return{\r\n                    [className]:{\r\n                        ...prevState[className], [name]:value\r\n                    }\r\n                }\r\n            }\r\n            )\r\n        \r\n    }\r\n\r\n    handleInput(e){\r\n        let className = this.state.className;\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        //console.log(e.target)\r\n        this.setState(prevState =>{\r\n            return{\r\n                [className]:{\r\n                    ...prevState[className], [name]:value\r\n                },\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    handleClick1(e){\r\n        let className = this.state.className;\r\n        let value = e.target.value;\r\n        //console.log(value)\r\n        let name = e.target.name;\r\n        this.setState(prevState =>{\r\n            return{\r\n                [className]:{\r\n                    ...prevState[className], [name]:value,\r\n                },\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    handleDropdown(e,{value,name}){\r\n        let className = this.state.className;\r\n        this.setState(prevState=>{\r\n            return{\r\n                [className]:{\r\n                    ...prevState[className], [name]:value\r\n                }\r\n            }\r\n        }\r\n        )\r\n    } \r\n\r\n    get previousButton(){\r\n        let currentStep = this.state.currentStep;\r\n        if(currentStep !==1&&currentStep<6){\r\n            return(\r\n                <Button primary content='Prev' onClick={this._prev}/>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get nextButton(){\r\n        let currentStep = this.state.currentStep;\r\n        if(currentStep <5){\r\n            return(\r\n                <Button primary content='Next' onClick={this._next}/>\r\n            )\r\n        }\r\n        else if (currentStep===5){\r\n            return(\r\n                <Modal\r\n                    basic\r\n                    open={this.state.open}\r\n                    size='small'\r\n                    //trigger={<Button onClick={()=>this.setState({open:true})}>Basic Modal</Button>}\r\n                    trigger={<Button primary content='Save and Next to Mobility Form' onClick={()=>this.setState({open:true})}></Button>}\r\n                    >\r\n                    <Header icon color='orange'>\r\n                    <Icon name='exclamation'/>\r\n                        <h1>Non Editable After Save</h1>\r\n                    </Header>\r\n                    <Modal.Content>\r\n                        <div style={{textAlign:'center'}}>\r\n                            <p> Please make sure the following details are filled before submit:</p>\r\n                            <ul style={{display:'inline-block',textAlign:'left'}}>\r\n                                <li>Case ID</li>\r\n                                <li>Residential Address</li>\r\n                                <li>Onset Date</li>\r\n                            </ul>\r\n                        </div>\r\n                    </Modal.Content>\r\n                    <Modal.Actions style={{textAlign:'center'}}>\r\n                        <Button color='red' inverted onClick={() => this.setState({open:false})}>\r\n                        <Icon name='remove'/> Go Back\r\n                        </Button>\r\n                        <Button color='green' inverted onClick={this._save}>\r\n                        <Icon name='checkmark'/> Cofirm and Save\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            )\r\n        }\r\n        /* else if (currentStep===6){\r\n            return(\r\n                <Button primary content='Save' onClick={this._save}/>\r\n            )\r\n        } */\r\n        return null;\r\n    }\r\n\r\n    render(){\r\n        const {case_no,case_note,case_area,case_type,eweek,outbreaks_loc,outbreaks_first}=this.state.caseInfo;\r\n        const {pat_name,race,nationality,age,gender,occp,esc_name,ic_num,ic_type,curr_add,\r\n                curr_add_hp,curr_add_tel,oth_add,oth_add_hp,oth_add_tel,oth_add_type}=this.state.patientData;\r\n        const {clhos_name, ward_name, reg_no, date, onset_date, enter_date, diag_date, \r\n                not_date, ser_date, hess_test, test_data, pcv_hem, wbc, plt_count, hb, \r\n                other, reason_report, dia_officer, rep_officer, def_meet, symInfo, symptoms, warning}=this.state.NotifData\r\n        const {clinicP_name,clinicP_sym,clinicP_creat,clinicP_RPPD,visit_date,dig_note}=this.state.PriCliData\r\n        const {refer_party, refer_partyName, refer_dig, refer_date, \r\n            receiver_name, investigator_name, reportor_name, receive_date, investigate_date, report_date}=this.state.ReferData\r\n        const values ={case_no,case_note,case_area,case_type,eweek,outbreaks_loc,outbreaks_first,\r\n                pat_name,race,nationality,age,gender,occp,esc_name,ic_num,ic_type,curr_add,\r\n                curr_add_hp,curr_add_tel,oth_add,oth_add_hp,oth_add_tel,oth_add_type,\r\n                clhos_name, ward_name, reg_no, date, onset_date, enter_date, diag_date, not_date, ser_date,\r\n                hess_test, test_data, pcv_hem, wbc, plt_count, hb, other, reason_report, dia_officer, \r\n                rep_officer,def_meet, symInfo, symptoms, warning,clinicP_name,clinicP_sym,clinicP_creat,\r\n                clinicP_RPPD,visit_date,dig_note,refer_party, refer_partyName, refer_dig, refer_date, \r\n                receiver_name, investigator_name, reportor_name, receive_date, investigate_date, report_date};\r\n        return(\r\n            <React.Fragment>\r\n                <MenuBar activeItem='new'/>\r\n\r\n                <CaseForm \r\n                    currentStep={this.state.currentStep}\r\n                    handleInput={this.handleInput} \r\n                    handleClick1={this.handleClick1}\r\n                    values={values}/>\r\n                <PatientForm \r\n                    currentStep={this.state.currentStep}\r\n                    handleInput={this.handleInput} \r\n                    handleDropdown={this.handleDropdown}\r\n                    values={values}/>\r\n                <NotificationForm \r\n                    currentStep={this.state.currentStep}\r\n                    handleInput={this.handleInput} \r\n                    handleDate={this.handleDate}\r\n                    handleClick1={this.handleClick1}\r\n                    handleTick={this.handleTick}\r\n                    values={values}/>\r\n                <PrimeClinicForm\r\n                    currentStep={this.state.currentStep}\r\n                    handleInput={this.handleInput} \r\n                    handleDate={this.handleDate}\r\n                    handleClick1={this.handleClick1}\r\n                    values={values}/>\r\n                <ReferenceForm\r\n                    currentStep={this.state.currentStep}\r\n                    handleInput={this.handleInput} \r\n                    handleDate={this.handleDate}\r\n                    values={values}/>\r\n                <MobilityForm \r\n                currentStep={this.state.currentStep}\r\n                caseID = {this.state.caseInfo.case_no}\r\n                onset = {this.state.NotifData.onset_date}\r\n                address = {this.state.patientData.curr_add}\r\n                other_add = {this.state.patientData.oth_add}\r\n                area = {this.state.caseInfo.case_area}\r\n                handleClick1={this.handleClick1}\r\n                history = {this.props.history}\r\n                />\r\n                <Grid centered>\r\n                    <Grid.Row>\r\n                        {this.previousButton}\r\n                        {this.nextButton}\r\n                        {this.saveButton}\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MasterForm"]},"metadata":{},"sourceType":"module"}