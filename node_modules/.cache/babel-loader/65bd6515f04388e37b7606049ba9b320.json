{"ast":null,"code":"import _slicedToArray from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\UserProfile.js\";\nimport React, { useState } from \"react\";\nimport { Map, TileLayer, Tooltip, Circle, Polyline } from \"react-leaflet\";\nimport { Button } from \"semantic-ui-react\";\nvar dummyRanking = [{\n  lat: 1.462251,\n  lng: 110.413307,\n  ranking: 0.8\n}, // London\n{\n  lat: 1.468643,\n  lng: 110.428541,\n  ranking: 0.6\n}];\n\nvar UserProfile = function UserProfile() {\n  var lat = 1.462251; // Initial map center latitude\n\n  var lng = 110.413307; // Initial map center longitude\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hideLine = _useState2[0],\n      setHideLine = _useState2[1];\n\n  var handleClick = function handleClick() {\n    setHideLine(!hideLine);\n  };\n\n  var controlPoints = []; // Array to store control points for curves\n  // Calculate control points\n\n  for (var i = 0; i < dummyRanking.length - 1; i++) {\n    var p1 = [dummyRanking[i].lat, dummyRanking[i].lng];\n    var p2 = [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng];\n    var controlPoint = [(p1[0] + p2[0]) / 2, // Midpoint of latitudes\n    (p1[1] + p2[1]) / 2];\n    controlPoints.push(controlPoint);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Map, {\n    center: [lat, lng],\n    zoom: 13,\n    style: {\n      width: \"100%\",\n      height: \"620px\",\n      margin: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    maxZoom: 16,\n    minZoom: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), dummyRanking.map(function (elem, i) {\n    var l = (0.9 - dummyRanking[i].ranking * 0.9) * 255;\n    var h = (0.9 - dummyRanking[i].ranking * 0.9) * 240;\n    var a = dummyRanking[i].ranking * 0.9;\n    var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\n    return React.createElement(Circle, {\n      key: i,\n      center: {\n        lat: dummyRanking[i].lat,\n        lng: dummyRanking[i].lng\n      },\n      color: \"red\",\n      fillColor: rgb,\n      fillOpacity: a,\n      radius: 50,\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Ranking:#\", i + 1)));\n  }), !hideLine && dummyRanking.length > 1 && controlPoints.map(function (controlPoint, i) {\n    return React.createElement(Polyline, {\n      key: i,\n      positions: [[dummyRanking[i].lat, dummyRanking[i].lng], // Start point\n      controlPoint, // Control point\n      [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng]],\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginLeft: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      margin: \"2px\",\n      border: \"2px solid black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      margin: \"2px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Map Legend:\"), React.createElement(\"p\", {\n    style: {\n      margin: \"2px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Circle: Data points\"), React.createElement(\"p\", {\n    style: {\n      margin: \"2px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Polyline: Connections\")), React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      right: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Close\"))));\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\UserProfile.js"],"names":["React","useState","Map","TileLayer","Tooltip","Circle","Polyline","Button","dummyRanking","lat","lng","ranking","UserProfile","hideLine","setHideLine","handleClick","controlPoints","i","length","p1","p2","controlPoint","push","width","height","margin","map","elem","l","h","a","rgb","display","flexDirection","marginLeft","border","position","right","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Map, TileLayer, Tooltip, Circle, Polyline } from \"react-leaflet\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst dummyRanking = [\r\n  { lat: 1.462251, lng: 110.413307, ranking: 0.8 }, // London\r\n  { lat: 1.468643, lng: 110.428541, ranking: 0.6 }, // New York\r\n  // { lat: 34.0522, lng: -118.2437, ranking: 0.4 }, // Los Angeles\r\n  // { lat: 41.8781, lng: -87.6298, ranking: 0.5 }, // Chicago\r\n  // { lat: 37.7749, lng: -122.4194, ranking: 0.7 } // San Francisco\r\n];\r\n\r\nconst UserProfile = () => {\r\n  const lat = 1.462251; // Initial map center latitude\r\n  const lng = 110.413307; // Initial map center longitude\r\n\r\n  const [hideLine, setHideLine] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setHideLine(!hideLine);\r\n  };\r\n\r\n  const controlPoints = []; // Array to store control points for curves\r\n\r\n  // Calculate control points\r\n  for (let i = 0; i < dummyRanking.length - 1; i++) {\r\n    const p1 = [dummyRanking[i].lat, dummyRanking[i].lng];\r\n    const p2 = [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng];\r\n\r\n    const controlPoint = [\r\n      (p1[0] + p2[0]) / 2, // Midpoint of latitudes\r\n      (p1[1] + p2[1]) / 2, // Midpoint of longitudes\r\n    ];\r\n\r\n    controlPoints.push(controlPoint);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Map\r\n        center={[lat, lng]}\r\n        zoom={13}\r\n        style={{ width: \"100%\", height: \"620px\", margin: \"auto\" }}\r\n      >\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          maxZoom={16}\r\n          minZoom={2}\r\n        />\r\n        {dummyRanking.map((elem, i) => {\r\n          var l = (0.9 - dummyRanking[i].ranking * 0.9) * 255;\r\n          var h = (0.9 - dummyRanking[i].ranking * 0.9) * 240;\r\n          var a = dummyRanking[i].ranking * 0.9;\r\n          var rgb = \"rgb(255,\" + l + \",\" + l + \")\";\r\n          return (\r\n            <Circle\r\n              key={i}\r\n              center={{ lat: dummyRanking[i].lat, lng: dummyRanking[i].lng }}\r\n              color=\"red\"\r\n              fillColor={rgb}\r\n              fillOpacity={a}\r\n              radius={50}\r\n              onClick={handleClick}\r\n            >\r\n              <Tooltip>\r\n                <h3>Ranking:#{i + 1}</h3>\r\n              </Tooltip>\r\n            </Circle>\r\n          );\r\n        })}\r\n        {/* Render curved lines between circles */}\r\n        {!hideLine &&\r\n          dummyRanking.length > 1 &&\r\n          controlPoints.map((controlPoint, i) => (\r\n            <Polyline\r\n              key={i}\r\n              positions={[\r\n                [dummyRanking[i].lat, dummyRanking[i].lng], // Start point\r\n                controlPoint, // Control point\r\n                [dummyRanking[i + 1].lat, dummyRanking[i + 1].lng], // End point\r\n              ]}\r\n              color=\"blue\"\r\n            />\r\n          ))}\r\n      </Map>\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"column\", marginLeft: \"10px\" }}\r\n      >\r\n        <div style={{ margin: \"2px\", border: \"2px solid black\" }}>\r\n          <p style={{ margin: \"2px\" }}>Map Legend:</p>\r\n          <p style={{ margin: \"2px\" }}>Circle: Data points</p>\r\n          <p style={{ margin: \"2px\" }}>Polyline: Connections</p>\r\n        </div>\r\n        <div style={{ position: \"absolute\", right: \"10px\" }}>\r\n          <Button style={{ marginTop: \"10px\" }}>Close</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}