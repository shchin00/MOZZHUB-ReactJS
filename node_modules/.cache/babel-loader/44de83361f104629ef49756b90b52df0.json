{"ast":null,"code":"import _classCallCheck from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\PatientForm.js\";\nimport React from 'react';\nimport { Button, Grid, Form, Divider, Segment, Progress, Header, Popup, Icon } from 'semantic-ui-react';\n\nvar PatientForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PatientForm, _React$Component);\n\n  function PatientForm(props) {\n    var _this;\n\n    _classCallCheck(this, PatientForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientForm).call(this, props));\n    /* this.state={\r\n        //caseData:'',\r\n        patientData:{\r\n            pat_name:'Alan Chia',\r\n            race:'NON BUMIPUTERA',\r\n            nationality:'Citizen',\r\n            age:'23',\r\n            gender:'Male',\r\n            occp:'Sales Man',\r\n            esc_name:'-',\r\n            ic_num:'970211016877',\r\n            ic_type:'Own',\r\n            curr_add:'20,Jalan ABC, TAMAN EDF, 82600 Kuala Lumpur',\r\n            curr_add_type:'Town',\r\n            curr_add_tel:'03-9543621',\r\n            curr_add_hp:'012-7775555',\r\n            oth_add:'12, Jalan UM, Taman UM,82600 Kuala Lumpur',\r\n            oth_add_type:'Town',\r\n            oth_add_tel:'03-9543621',\r\n            oth_add_hp:'03-9543621'\r\n            }\r\n        } */\n    //this.props.handleInput = this.props.handleInput.bind(this)\n\n    /*  this.handleSave = this.handleSave.bind(this)\r\n     this.handleNext = this.handleNext.bind(this)\r\n     this.handleBack = this.handleBack.bind(this) */\n    //this.props.handleDropdown = this.props.handleDropdown.bind(this)\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PatientForm, [{\n    key: \"render\",\n\n    /* componentWillMount(){\r\n        let url = 'http://localhost:8080/patientData'\r\n        fetch(url)\r\n        .then(res =>res.json())\r\n        .then(data =>//console.log(data.patientData)\r\n            this.setState({\r\n                patientData:{\r\n                    pat_name:data.patientData.pat_name,\r\n                    race:data.patientData.race,\r\n                    nationality:data.patientData.nationality,\r\n                    age:data.patientData.age,\r\n                    gender:data.patientData.gender,\r\n                    occp:data.patientData.occp,\r\n                    esc_name:data.patientData.esc_name,\r\n                    ic_num:data.patientData.ic_num,\r\n                    ic_type:data.patientData.ic_type,\r\n                    curr_add:data.patientData.curr_add,\r\n                    curr_add_type:data.patientData.curr_add_type,\r\n                    curr_add_tel:data.patientData.curr_add_tel,\r\n                    curr_add_hp:data.patientData.curr_add_hp,\r\n                    oth_add:data.patientData.oth_add,\r\n                    oth_add_type:data.patientData.oth_add_type,\r\n                    oth_add_tel:data.patientData.curr_add_tel,\r\n                    oth_add_hp:data.patientData.curr_add_hp\r\n                    }\r\n            })\r\n            )\r\n        .catch(error =>console.error(error))    \r\n    } */\n\n    /*  handleSave(e){\r\n         let patientData=values\r\n         let urlp = 'http://localhost:8080/patientData'\r\n         console.log(patientData)\r\n             fetch(urlp,{\r\n                 method:\"POST\",\r\n                 headers: {\r\n                     'Accept': 'application/json',\r\n                     'Content-Type': 'application/json'\r\n                   },\r\n                 body: JSON.stringify({patientData}),\r\n             }) \r\n              \r\n           } */\n\n    /* handleChange=(e,{value,name})=>{\r\n        console.log(name);\r\n        console.log(value);\r\n        this.setState(prevState=>{\r\n            return{\r\n                patientData:{\r\n                    ...prevState.patientData, [name]:value\r\n                }\r\n            }\r\n        })} */\n\n    /* handleInput(e){\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        console.log(e.target)\r\n        this.setState(prevState =>{\r\n            return{\r\n                patientData:{\r\n                    ...prevState.patientData, [name]:value,\r\n                },\r\n            }\r\n        },()=>console.log(values)\r\n        )\r\n    } */\n\n    /* handleNext(){\r\n        this.props.history.push(\"/new/notif\");\r\n    }\r\n      handleBack(){\r\n        this.props.history.push(\"/new/case\");\r\n    } */\n    value: function render() {\n      if (this.props.currentStep !== 2) {\n        return null;\n      }\n\n      var values = this.props.values;\n      var addType = [{\n        text: 'Town',\n        value: 'Town'\n      }, {\n        text: 'Rural',\n        value: 'Rural'\n      }];\n      var icType = [{\n        text: 'Own',\n        value: 'Own'\n      }, {\n        text: 'Escort',\n        value: 'Escort'\n      }];\n      var gender = [{\n        text: 'Male',\n        value: 'Male'\n      }, {\n        text: 'Female',\n        value: 'Female'\n      }];\n      var race = [{\n        text: 'BUMIPUTERA',\n        value: 'BUMIPUTERA'\n      }, {\n        text: 'NON BUMIPUTERA',\n        value: 'NON BUMIPUTERA'\n      }];\n      var natio = [{\n        text: 'Citizen',\n        value: 'Citizen'\n      }, {\n        text: 'Non-Citizen',\n        value: 'Non-Citizen'\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"New Patient Information\"), React.createElement(Segment, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        value: \"1\",\n        total: \"6\",\n        progress: \"ratio\",\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        centered: true,\n        columns: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        trigger: React.createElement(Icon, {\n          circular: true,\n          color: \"teal\",\n          name: \"help\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }),\n        position: \"bottom right\",\n        wide: \"very\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../img/patientInfo.PNG'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })))), React.createElement(Grid.Row, {\n        centered: true,\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Form, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'pat_name',\n        label: \"Patient Name: \",\n        placeholder: \"Please key in...\",\n        value: values.pat_name,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        name: 'race',\n        label: \"Race:\",\n        placeholder: \"Please choose...\",\n        options: race,\n        value: values.race,\n        onChange: this.props.handleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        name: 'nationality',\n        label: \"Nationality:\",\n        placeholder: \"Please choose...\",\n        options: natio,\n        value: values.nationality,\n        onChange: this.props.handleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'age',\n        label: \"Age: \",\n        placeholder: \"Please key in...\",\n        value: values.age,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        name: 'gender',\n        label: \"Gender:\",\n        placeholder: \"Please choose...\",\n        options: gender,\n        value: values.gender,\n        onChange: this.props.handleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'occp',\n        label: \"Occupation:\",\n        placeholder: \"Please key in...\",\n        value: values.occp,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'ic_num',\n        label: \"IC Number: \",\n        placeholder: \"Please key in...\",\n        value: values.ic_num,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        name: 'ic_type',\n        label: \"IC Type:\",\n        placeholder: \"Please choose...\",\n        options: icType,\n        value: values.ic_type,\n        onChange: this.props.handleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'esc_name',\n        label: \"Escort Name: \",\n        placeholder: \"Please key in...\",\n        value: values.esc_name,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Residential Address\")), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'curr_add',\n        required: true,\n        label: \"Current:\",\n        placeholder: \"Please key in...\",\n        value: values.curr_add,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        name: 'curr_add_type',\n        width: 5,\n        label: \"Please Choose:\",\n        placeholder: \"Please choose...\",\n        value: values.curr_add_type,\n        options: addType,\n        onChange: this.props.handleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'curr_add_tel',\n        label: \"Telephone Number:\",\n        placeholder: \"Please key in...\",\n        value: values.curr_add_tel,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'curr_add_hp',\n        label: \"Handphone Number:\",\n        placeholder: \"Please key in...\",\n        value: values.curr_add_hp,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Other Address\")), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'oth_add',\n        label: \"Other Address:\",\n        placeholder: \"Please key in...\",\n        value: values.oth_add,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        name: 'oth_add_type',\n        width: 5,\n        label: \"Please Choose:\",\n        placeholder: \"Please choose...\",\n        options: addType,\n        value: values.oth_add_type,\n        onChange: this.props.handleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        name: 'oth_add_tel',\n        label: \"Telephone Number:\",\n        placeholder: \"Please key in...\",\n        value: values.oth_add_tel,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: 'oth_add_hp',\n        label: \"Handphone Number:\",\n        placeholder: \"Please key in...\",\n        value: values.oth_add_hp,\n        onChange: this.props.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return PatientForm;\n}(React.Component);\n\nexport default PatientForm;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\PatientForm.js"],"names":["React","Button","Grid","Form","Divider","Segment","Progress","Header","Popup","Icon","PatientForm","props","state","currentStep","values","addType","text","value","icType","gender","race","natio","require","pat_name","handleInput","handleDropdown","nationality","age","occp","ic_num","ic_type","esc_name","curr_add","curr_add_type","curr_add_tel","curr_add_hp","oth_add","oth_add_type","oth_add_tel","oth_add_hp","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Button,Grid,Form,Divider,Segment,Progress,Header,Popup,Icon} from 'semantic-ui-react'\r\n\r\nclass PatientForm extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        /* this.state={\r\n            //caseData:'',\r\n            patientData:{\r\n                pat_name:'Alan Chia',\r\n                race:'NON BUMIPUTERA',\r\n                nationality:'Citizen',\r\n                age:'23',\r\n                gender:'Male',\r\n                occp:'Sales Man',\r\n                esc_name:'-',\r\n                ic_num:'970211016877',\r\n                ic_type:'Own',\r\n                curr_add:'20,Jalan ABC, TAMAN EDF, 82600 Kuala Lumpur',\r\n                curr_add_type:'Town',\r\n                curr_add_tel:'03-9543621',\r\n                curr_add_hp:'012-7775555',\r\n                oth_add:'12, Jalan UM, Taman UM,82600 Kuala Lumpur',\r\n                oth_add_type:'Town',\r\n                oth_add_tel:'03-9543621',\r\n                oth_add_hp:'03-9543621'\r\n                }\r\n            } */\r\n            //this.props.handleInput = this.props.handleInput.bind(this)\r\n           /*  this.handleSave = this.handleSave.bind(this)\r\n            this.handleNext = this.handleNext.bind(this)\r\n            this.handleBack = this.handleBack.bind(this) */\r\n            //this.props.handleDropdown = this.props.handleDropdown.bind(this)\r\n        }\r\n\r\n    state = {}\r\n    \r\n    /* componentWillMount(){\r\n        let url = 'http://localhost:8080/patientData'\r\n        fetch(url)\r\n        .then(res =>res.json())\r\n        .then(data =>//console.log(data.patientData)\r\n            this.setState({\r\n                patientData:{\r\n                    pat_name:data.patientData.pat_name,\r\n                    race:data.patientData.race,\r\n                    nationality:data.patientData.nationality,\r\n                    age:data.patientData.age,\r\n                    gender:data.patientData.gender,\r\n                    occp:data.patientData.occp,\r\n                    esc_name:data.patientData.esc_name,\r\n                    ic_num:data.patientData.ic_num,\r\n                    ic_type:data.patientData.ic_type,\r\n                    curr_add:data.patientData.curr_add,\r\n                    curr_add_type:data.patientData.curr_add_type,\r\n                    curr_add_tel:data.patientData.curr_add_tel,\r\n                    curr_add_hp:data.patientData.curr_add_hp,\r\n                    oth_add:data.patientData.oth_add,\r\n                    oth_add_type:data.patientData.oth_add_type,\r\n                    oth_add_tel:data.patientData.curr_add_tel,\r\n                    oth_add_hp:data.patientData.curr_add_hp\r\n                    }\r\n            })\r\n            )\r\n        .catch(error =>console.error(error))    \r\n    } */\r\n    \r\n   /*  handleSave(e){\r\n        let patientData=values\r\n        let urlp = 'http://localhost:8080/patientData'\r\n        console.log(patientData)\r\n            fetch(urlp,{\r\n                method:\"POST\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                body: JSON.stringify({patientData}),\r\n            }) \r\n             \r\n          } */\r\n    /* handleChange=(e,{value,name})=>{\r\n        console.log(name);\r\n        console.log(value);\r\n        this.setState(prevState=>{\r\n            return{\r\n                patientData:{\r\n                    ...prevState.patientData, [name]:value\r\n                }\r\n            }\r\n        })} */\r\n    /* handleInput(e){\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        console.log(e.target)\r\n        this.setState(prevState =>{\r\n            return{\r\n                patientData:{\r\n                    ...prevState.patientData, [name]:value,\r\n                },\r\n            }\r\n        },()=>console.log(values)\r\n        )\r\n    } */\r\n\r\n    /* handleNext(){\r\n        this.props.history.push(\"/new/notif\");\r\n    }\r\n\r\n    handleBack(){\r\n        this.props.history.push(\"/new/case\");\r\n    } */\r\n\r\n    render(){\r\n        if(this.props.currentStep !==2){\r\n            return null\r\n        }\r\n        const { values } = this.props;\r\n        const addType = [\r\n            {text:'Town',value:'Town'},\r\n            {text:'Rural',value:'Rural'}]\r\n        const icType = [\r\n            {text:'Own',value:'Own'},\r\n            {text:'Escort',value:'Escort'}]\r\n        const gender = [    \r\n            {text:'Male',value:'Male'},\r\n            {text:'Female',value:'Female'}]\r\n        const race = [\r\n            {text:'BUMIPUTERA',value:'BUMIPUTERA'},\r\n            {text:'NON BUMIPUTERA',value:'NON BUMIPUTERA'}]\r\n        const natio=[\r\n            {text:'Citizen',value:'Citizen'},\r\n            {text:'Non-Citizen',value:'Non-Citizen'},\r\n        ]\r\n        return(\r\n            <div>\r\n                <Header as='h2'textAlign='center'>New Patient Information</Header>\r\n                <Segment basic>\r\n                    <Progress value='1' total='6' progress='ratio' color='orange'/>\r\n                </Segment>\r\n                    <Grid>\r\n                    <Grid.Row centered columns={1}>\r\n                        <Grid.Column textAlign='right'>\r\n                            <Popup \r\n                                trigger={<Icon circular color='teal' name='help' />} \r\n                                position='bottom right'\r\n                                wide='very'>\r\n                                <img src={ require('../img/patientInfo.PNG')}/>\r\n                            </Popup>\r\n                        </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row centered columns={2} >\r\n                        <Grid.Column>\r\n                            <Form widths='equal'>\r\n                                <Form.Group>\r\n                                    <Form.Input name={'pat_name'} label='Patient Name: ' placeholder='Please key in...' value={values.pat_name} onChange={this.props.handleInput}/>\r\n                                    <Form.Select name={'race'} label='Race:' placeholder='Please choose...' options={race} value={values.race} onChange={this.props.handleDropdown}/>\r\n                                    <Form.Select name={'nationality'} label='Nationality:' placeholder='Please choose...' options={natio} value={values.nationality} onChange={this.props.handleDropdown}/>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Input name={'age'} label= 'Age: ' placeholder='Please key in...' value={values.age}  onChange={this.props.handleInput}/>\r\n                                    <Form.Select name={'gender'} label='Gender:' placeholder='Please choose...' options={gender} value={values.gender} onChange={this.props.handleDropdown}/>\r\n                                    <Form.Input name={'occp'} label='Occupation:' placeholder='Please key in...' value={values.occp}  onChange={this.props.handleInput}/>\r\n                                </Form.Group>\r\n                                <Form.Group > \r\n                                    <Form.Input name={'ic_num'} label='IC Number: ' placeholder='Please key in...' value={values.ic_num}  onChange={this.props.handleInput}/>\r\n                                    <Form.Select name={'ic_type'} label='IC Type:' placeholder='Please choose...' options={icType} value={values.ic_type} onChange={this.props.handleDropdown}/>\r\n                                    <Form.Input name={'esc_name'} label= 'Escort Name: ' placeholder='Please key in...' value={values.esc_name}  onChange={this.props.handleInput}/>\r\n                                </Form.Group>\r\n                                <label><strong>Residential Address</strong></label>\r\n                                <Form.Group>\r\n                                    <Form.Input name={'curr_add'} required label='Current:' placeholder='Please key in...' value={values.curr_add}  onChange={this.props.handleInput}/>\r\n                                    <Form.Select name={'curr_add_type'} width={5} label='Please Choose:' placeholder='Please choose...' value={values.curr_add_type} options={addType} onChange={this.props.handleDropdown}/>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Input name={'curr_add_tel'} label='Telephone Number:' placeholder='Please key in...' value={values.curr_add_tel} onChange={this.props.handleInput}/>\r\n                                    <Form.Input name={'curr_add_hp'} label='Handphone Number:' placeholder='Please key in...' value={values.curr_add_hp}  onChange={this.props.handleInput}/>\r\n                                </Form.Group>\r\n                                <label><strong>Other Address</strong></label>\r\n                                <Form.Group>\r\n                                    <Form.Input name={'oth_add'} label='Other Address:' placeholder='Please key in...' value={values.oth_add}  onChange={this.props.handleInput}/>\r\n                                    <Form.Select name={'oth_add_type'}  width={5} label='Please Choose:' placeholder='Please choose...' options={addType} value={values.oth_add_type} onChange={this.props.handleDropdown}/>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Form.Input name={'oth_add_tel'} label='Telephone Number:' placeholder='Please key in...' value={values.oth_add_tel} onChange={this.props.handleInput}/>\r\n                                    <Form.Input name={'oth_add_hp'} label='Handphone Number:' placeholder='Please key in...' value={values.oth_add_hp}  onChange={this.props.handleInput}/>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Grid.Column>\r\n                        </Grid.Row> \r\n                    </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PatientForm"]},"metadata":{},"sourceType":"module"}