{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar reactRouter = require('react-router');\n\nvar React = _interopDefault(require('react'));\n\nvar history = require('history');\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar warning = _interopDefault(require('tiny-warning'));\n\nvar invariant = _interopDefault(require('tiny-invariant'));\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = history.createBrowserHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(reactRouter.Router, {\n        history: this.history,\n        children: this.props.children\n      })\n    );\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\n{\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n    warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\");\n  };\n}\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = history.createHashHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(reactRouter.Router, {\n        history: this.history,\n        children: this.props.children\n      })\n    );\n  };\n\n  return HashRouter;\n}(React.Component);\n\n{\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n    warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\");\n  };\n}\n\nvar resolveToLocation = function resolveToLocation(to, currentLocation) {\n  return typeof to === \"function\" ? to(currentLocation) : to;\n};\n\nvar normalizeToLocation = function normalizeToLocation(to, currentLocation) {\n  return typeof to === \"string\" ? history.createLocation(to, null, null, currentLocation) : to;\n};\n\nvar forwardRefShim = function forwardRefShim(C) {\n  return C;\n};\n\nvar forwardRef = React.forwardRef;\n\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar LinkAnchor = forwardRef(function (_ref, forwardedRef) {\n  var innerRef = _ref.innerRef,\n      navigate = _ref.navigate,\n      _onClick = _ref.onClick,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"innerRef\", \"navigate\", \"onClick\"]);\n\n  var target = rest.target;\n\n  var props = _extends({}, rest, {\n    onClick: function onClick(event) {\n      try {\n        if (_onClick) _onClick(event);\n      } catch (ex) {\n        event.preventDefault();\n        throw ex;\n      }\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && ( // ignore everything but left clicks\n      !target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n          navigate();\n        }\n    }\n  }); // React 15 compat\n\n\n  if (forwardRefShim !== forwardRef) {\n    props.ref = forwardedRef || innerRef;\n  } else {\n    props.ref = innerRef;\n  }\n  /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"a\", props)\n  );\n});\n{\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = forwardRef(function (_ref2, forwardedRef) {\n  var _ref2$component = _ref2.component,\n      component = _ref2$component === void 0 ? LinkAnchor : _ref2$component,\n      replace = _ref2.replace,\n      to = _ref2.to,\n      innerRef = _ref2.innerRef,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"component\", \"replace\", \"to\", \"innerRef\"]);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(reactRouter.__RouterContext.Consumer, null, function (context) {\n      !context ? invariant(false, \"You should not use <Link> outside a <Router>\") : void 0;\n      var history$1 = context.history;\n      var location = normalizeToLocation(resolveToLocation(to, context.location), context.location);\n      var href = location ? history$1.createHref(location) : \"\";\n\n      var props = _extends({}, rest, {\n        href: href,\n        navigate: function navigate() {\n          var location = resolveToLocation(to, context.location);\n          var isDuplicateNavigation = history.createPath(context.location) === history.createPath(normalizeToLocation(location));\n          var method = replace || isDuplicateNavigation ? history$1.replace : history$1.push;\n          method(location);\n        }\n      }); // React 15 compat\n\n\n      if (forwardRefShim !== forwardRef) {\n        props.ref = forwardedRef || innerRef;\n      } else {\n        props.innerRef = innerRef;\n      }\n\n      return (\n        /*#__PURE__*/\n        React.createElement(component, props)\n      );\n    })\n  );\n});\n{\n  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func]);\n  var refType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]);\n  Link.displayName = \"Link\";\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nvar forwardRefShim$1 = function forwardRefShim(C) {\n  return C;\n};\n\nvar forwardRef$1 = React.forwardRef;\n\nif (typeof forwardRef$1 === \"undefined\") {\n  forwardRef$1 = forwardRefShim$1;\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = forwardRef$1(function (_ref, forwardedRef) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      locationProp = _ref.location,\n      sensitive = _ref.sensitive,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      innerRef = _ref.innerRef,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"sensitive\", \"strict\", \"style\", \"to\", \"innerRef\"]);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(reactRouter.__RouterContext.Consumer, null, function (context) {\n      !context ? invariant(false, \"You should not use <NavLink> outside a <Router>\") : void 0;\n      var currentLocation = locationProp || context.location;\n      var toLocation = normalizeToLocation(resolveToLocation(to, currentLocation), currentLocation);\n      var path = toLocation.pathname; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n      var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n      var match = escapedPath ? reactRouter.matchPath(currentLocation.pathname, {\n        path: escapedPath,\n        exact: exact,\n        sensitive: sensitive,\n        strict: strict\n      }) : null;\n      var isActive = !!(isActiveProp ? isActiveProp(match, currentLocation) : match);\n      var className = typeof classNameProp === \"function\" ? classNameProp(isActive) : classNameProp;\n      var style = typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n      if (isActive) {\n        className = joinClassnames(className, activeClassName);\n        style = _extends({}, style, activeStyle);\n      }\n\n      var props = _extends({\n        \"aria-current\": isActive && ariaCurrent || null,\n        className: className,\n        style: style,\n        to: toLocation\n      }, rest); // React 15 compat\n\n\n      if (forwardRefShim$1 !== forwardRef$1) {\n        props.ref = forwardedRef || innerRef;\n      } else {\n        props.innerRef = innerRef;\n      }\n\n      return (\n        /*#__PURE__*/\n        React.createElement(Link, props)\n      );\n    })\n  );\n});\n{\n  NavLink.displayName = \"NavLink\";\n  var ariaCurrentType = PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\", \"false\"]);\n  NavLink.propTypes = _extends({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  });\n}\nObject.defineProperty(exports, 'MemoryRouter', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.MemoryRouter;\n  }\n});\nObject.defineProperty(exports, 'Prompt', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.Prompt;\n  }\n});\nObject.defineProperty(exports, 'Redirect', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.Redirect;\n  }\n});\nObject.defineProperty(exports, 'Route', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.Route;\n  }\n});\nObject.defineProperty(exports, 'Router', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.Router;\n  }\n});\nObject.defineProperty(exports, 'StaticRouter', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.StaticRouter;\n  }\n});\nObject.defineProperty(exports, 'Switch', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.Switch;\n  }\n});\nObject.defineProperty(exports, 'generatePath', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.generatePath;\n  }\n});\nObject.defineProperty(exports, 'matchPath', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.matchPath;\n  }\n});\nObject.defineProperty(exports, 'useHistory', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.useHistory;\n  }\n});\nObject.defineProperty(exports, 'useLocation', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.useLocation;\n  }\n});\nObject.defineProperty(exports, 'useParams', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.useParams;\n  }\n});\nObject.defineProperty(exports, 'useRouteMatch', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.useRouteMatch;\n  }\n});\nObject.defineProperty(exports, 'withRouter', {\n  enumerable: true,\n  get: function get() {\n    return reactRouter.withRouter;\n  }\n});\nexports.BrowserRouter = BrowserRouter;\nexports.HashRouter = HashRouter;\nexports.Link = Link;\nexports.NavLink = NavLink;","map":null,"metadata":{},"sourceType":"script"}