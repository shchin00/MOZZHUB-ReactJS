{"ast":null,"code":"import _classCallCheck from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\MOZZHUB-ReactJS\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\LoginForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport LoginFailedMessage from './Alert.js';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n    _this.state = {\n      username: '',\n      password: '',\n      status: true\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password; //console.log(this.props.location.state.status)\n      //const {loginStatus} = this.props.loginStatus\n      //console.log(props.user.login)\n\n      return React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"\\n                body > div,\\n                body > div > div,\\n                body > div > div > div.login-form {\\n                    height: 100%;\\n                } \\n            \"), React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100%'\n        },\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(LoginFailedMessage, {\n        status: this.state.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Header, {\n        as: \"h1\",\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"MOZZHUB\"), React.createElement(Form, {\n        size: \"large\",\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n\n          _this2.props.login(username, password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        color: \"black\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"black\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Log-in to your account\"), React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"User ID\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            username: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            password: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Button, {\n        fluid: true,\n        size: \"large\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Login\"))))));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nvar mapState = function mapState(state) {\n  return {\n    loginStatus: state.user.login,\n    nodes: state.nodes,\n    status: state.user.status\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    login: function login(username, password) {\n      return dispatch.user.login({\n        username: username,\n        password: password\n      });\n    } //getNodes: dispatch.nodes.getNodes()\n\n  };\n};\n\nexport default connect(mapState, mapDispatch)(LoginForm);","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\LoginForm.js"],"names":["React","connect","Button","Form","Grid","Header","Image","Message","Segment","LoginFailedMessage","LoginForm","props","state","username","password","status","height","maxWidth","event","preventDefault","login","setState","target","value","Component","mapState","loginStatus","user","nodes","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport LoginFailedMessage from './Alert.js'\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        status: true\r\n    }\r\n\r\n    render() {\r\n        const { username, password } = this.state\r\n        //console.log(this.props.location.state.status)\r\n        //const {loginStatus} = this.props.loginStatus\r\n        //console.log(props.user.login)\r\n        return (\r\n            <div className='login-form'>\r\n                <style>{`\r\n                body > div,\r\n                body > div > div,\r\n                body > div > div > div.login-form {\r\n                    height: 100%;\r\n                } \r\n            `}</style>\r\n                <Grid\r\n                    textAlign='center'\r\n                    style={{ height: '100%' }}\r\n                    verticalAlign='middle'\r\n                >\r\n\r\n\r\n                    <Grid.Column style={{ maxWidth: 450 }} >\r\n                        <LoginFailedMessage status={this.state.status} />\r\n                        <Header as='h1' color='red'>MOZZHUB</Header>\r\n\r\n                        <Form size='large'\r\n                            onSubmit={event => {\r\n                                event.preventDefault()\r\n                                this.props.login(username, password)\r\n                            }}>\r\n                            <Segment stacked color='black' inverted>\r\n                                <Header as='h2' color='black' textAlign='center'>\r\n                                    Log-in to your account\r\n                                </Header>\r\n                                <Form.Input\r\n                                    fluid\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    placeholder='User ID'\r\n                                    onChange={event => this.setState({ username: event.target.value })}\r\n                                />\r\n                                <Form.Input\r\n                                    fluid\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    placeholder='Password'\r\n                                    type='password'\r\n                                    onChange={event => this.setState({ password: event.target.value })}\r\n                                />\r\n\r\n                                <Button fluid size='large' inverted>Login</Button>\r\n                            </Segment>\r\n                        </Form>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapState = state => ({\r\n    loginStatus: state.user.login,\r\n    nodes: state.nodes,\r\n    status: state.user.status\r\n})\r\n\r\n\r\n\r\nconst mapDispatch = dispatch => ({\r\n    login: (username, password) => dispatch.user.login({ username, password }),\r\n    //getNodes: dispatch.nodes.getNodes()\r\n\r\n})\r\nexport default connect(mapState, mapDispatch)(LoginForm)"]},"metadata":{},"sourceType":"module"}