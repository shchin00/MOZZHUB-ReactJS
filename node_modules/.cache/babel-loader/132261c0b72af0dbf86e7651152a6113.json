{"ast":null,"code":"var _jsxFileName = \"D:\\\\MOZZHUB-ReactJS\\\\src\\\\component\\\\reviewCom2.js\";\nimport React from 'react';\nimport { Button, Grid, Form, Divider, Segment, Input, Progress, Header } from 'semantic-ui-react';\n\nvar CaseFormReview2 = function CaseFormReview2(_ref) {\n  var _ref$dataC = _ref.dataC,\n      dataC = _ref$dataC === void 0 ? {} : _ref$dataC,\n      _ref$dataP = _ref.dataP,\n      dataP = _ref$dataP === void 0 ? {} : _ref$dataP,\n      _ref$dataN = _ref.dataN,\n      dataN = _ref$dataN === void 0 ? {} : _ref$dataN,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? {} : _ref$data;\n  return React.createElement(Grid, {\n    stackable: true,\n    columns: 'equal',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"NOTIFICATION\"), React.createElement(Segment, {\n    color: \"yellow\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    label: 'Reporting Agent',\n    value: dataN.clhos_name,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Ward Name',\n    value: dataN.ward_name,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Registration Number',\n    value: dataN.reg_no,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Onset Date',\n    value: dataN.onset_date,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Enter Date',\n    value: dataN.enter_date,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Diagnosis Date',\n    value: dataN.diag_date,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Notification Date',\n    value: dataN.not_date,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(Segment, {\n    color: \"yellow\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    label: 'Serology test Date',\n    name: 'case_no',\n    value: dataN.ser_date,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Symtomps',\n    name: 'case_no',\n    value: dataN.symptoms,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'hess_test',\n    name: 'case_note',\n    value: dataN.hess_test,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Warning Sign',\n    value: dataN.warning,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'PCV/Hematocrit',\n    value: dataN.pcv_hem,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'WBC',\n    value: dataN.wbc,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Platelet Count',\n    value: dataN.plt_count,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\xA0\"), React.createElement(Segment, {\n    color: \"yellow\",\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    label: 'HB',\n    value: dataN.hb,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Other Clinical Symptoms',\n    name: 'case_no',\n    value: dataN.other,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: '--',\n    name: 'case_note',\n    value: '--',\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Dengue?',\n    value: dataN.def_meet,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Reason',\n    value: dataN.reason_report,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Diagnosis Officer',\n    value: dataN.dia_officer,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: 'Report Officer',\n    value: dataN.rep_officer,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))))));\n};\n\nexport default CaseFormReview2;","map":{"version":3,"sources":["D:\\MOZZHUB-ReactJS\\src\\component\\reviewCom2.js"],"names":["React","Button","Grid","Form","Divider","Segment","Input","Progress","Header","CaseFormReview2","dataC","dataP","dataN","data","clhos_name","ward_name","reg_no","onset_date","enter_date","diag_date","not_date","ser_date","symptoms","hess_test","warning","pcv_hem","wbc","plt_count","hb","other","def_meet","reason_report","dia_officer","rep_officer"],"mappings":"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","sourcesContent":[" import React from 'react'\r\nimport {Button,Grid,Form,Divider,Segment, Input, Progress,Header} from 'semantic-ui-react'\r\n\r\nconst CaseFormReview2 = ({dataC={},dataP={},dataN={},data={}}) =>(\r\n    <Grid stackable columns={'equal'}>\r\n        <Grid.Row> \r\n        <Grid.Column>\r\n                <Form>\r\n                    <Form.Field inline>\r\n                        <Header as ='h3'>NOTIFICATION</Header>\r\n                        <Segment color='yellow' basic>\r\n                        <Form.Input label={'Reporting Agent'}value={dataN.clhos_name} readOnly/>\r\n                        <Form.Input label={'Ward Name'}value={dataN.ward_name} readOnly />\r\n                        <Form.Input label={'Registration Number'} value={dataN.reg_no} readOnly/>\r\n                        <Form.Input label={'Onset Date'} value={dataN.onset_date} readOnly/>\r\n                        <Form.Input label={'Enter Date'} value={dataN.enter_date} readOnly/>\r\n                        <Form.Input label={'Diagnosis Date'} value={dataN.diag_date} readOnly/>\r\n                        <Form.Input label={'Notification Date'} value={dataN.not_date} readOnly/>\r\n                        </Segment>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Form>\r\n                    <Form.Field inline>\r\n                        <Header as ='h3'>&nbsp;</Header>\r\n                        <Segment color='yellow' basic>\r\n                        <Form.Input label={'Serology test Date'} name={'case_no'} value={dataN.ser_date} readOnly/>\r\n                        <Form.Input label={'Symtomps'} name={'case_no'} value={dataN.symptoms} readOnly/>\r\n                        <Form.Input label={'hess_test'} name={'case_note'} value={dataN.hess_test} readOnly />\r\n                        <Form.Input label={'Warning Sign'} value={dataN.warning} readOnly/>\r\n                        <Form.Input label={'PCV/Hematocrit'} value={dataN.pcv_hem} readOnly/>\r\n                        <Form.Input label={'WBC'} value={dataN.wbc} readOnly/>\r\n                        <Form.Input label={'Platelet Count'} value={dataN.plt_count} readOnly/>\r\n                        </Segment>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Form>\r\n                    <Form.Field inline>\r\n                        <Header as ='h3'>&nbsp;</Header>\r\n                        <Segment color='yellow' basic>\r\n                        <Form.Input label={'HB'} value={dataN.hb} readOnly/>\r\n                        <Form.Input label={'Other Clinical Symptoms'} name={'case_no'} value={dataN.other} readOnly/>\r\n                        <Form.Input label={'--'} name={'case_note'} value={'--'} readOnly />\r\n                        <Form.Input label={'Dengue?'} value={dataN.def_meet} readOnly/>\r\n                        <Form.Input label={'Reason'} value={dataN.reason_report} readOnly/>\r\n                        <Form.Input label={'Diagnosis Officer'} value={dataN.dia_officer} readOnly/>\r\n                        <Form.Input label={'Report Officer'} value={dataN.rep_officer} readOnly/>\r\n                        </Segment>\r\n                    </Form.Field>\r\n                </Form>\r\n            </Grid.Column>\r\n           \r\n        </Grid.Row>\r\n    </Grid>               \r\n)\r\n\r\nexport default CaseFormReview2\r\n "]},"metadata":{},"sourceType":"module"}